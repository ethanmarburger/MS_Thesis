[
  {
    "objectID": "Height_Analysis.html",
    "href": "Height_Analysis.html",
    "title": "Height Data Analysis",
    "section": "",
    "text": "Looking at differences in soybean height based on Treatment (0:control or 1:tannins) over time. We included WAT (Week after application) as an additional predictor variable and Plot and Field as nested random effects.\nResponse Variable:\n\nHeight (cm)\n\nPredictor Variables:\n\nTreatment (0: Control, 1: Tannins)\nWAT (Week After Application: 1-4)\nPlot (1-20)\nField (1-20)\n\nBelow is our process of fitting our data to the best possible model."
  },
  {
    "objectID": "Height_Analysis.html#step-1-loading-and-subsetting-data",
    "href": "Height_Analysis.html#step-1-loading-and-subsetting-data",
    "title": "Height Data Analysis",
    "section": "",
    "text": "Loading Appropriate Packages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(lme4)\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nlibrary(lmerTest)\n\n\nAttaching package: 'lmerTest'\n\nThe following object is masked from 'package:lme4':\n\n    lmer\n\nThe following object is masked from 'package:stats':\n\n    step\n\nlibrary(glmmTMB)\nlibrary(ggplot2)\n\n\n\n\n\n# Read the data\ndata &lt;- read.csv(\"Data.csv\", header=TRUE)\n\nSubsetting data to:\n1) Only include values from unenclosed plants.\n2) Convert predictor variables to factors with “levels”.\n3) Remove rows with missing values (missing values = dead plant or sampling error).\n\n# Subset to remove Enclosure values\ndata &lt;- data[data$Enclosure == \"0\", ]\n\n# Convert categorical variables to factors\ndata$Field &lt;- as.factor(data$Field)\ndata$Plot &lt;- as.factor(data$Plot)\ndata$Treatment &lt;- as.factor(data$Treatment)\ndata$Enclosure &lt;- as.factor(data$Enclosure)\n\n# Remove rows with missing Height values\ndata &lt;- data |&gt;\n  filter(!is.na(Height))"
  },
  {
    "objectID": "Height_Analysis.html#step-2-exploratory-data-analysis",
    "href": "Height_Analysis.html#step-2-exploratory-data-analysis",
    "title": "Height Data Analysis",
    "section": "Step 2: Exploratory Data Analysis",
    "text": "Step 2: Exploratory Data Analysis\nCalculating and Displaying mean soybean height for treatments across Weeks after application.\n\n# Calculate mean Height for each Treatment and WAT combination\nsummary_data &lt;- data |&gt;\n  group_by(Treatment, WAT) |&gt;\n  summarise(mean_height = mean(Height, na.rm = TRUE))\n\n`summarise()` has grouped output by 'Treatment'. You can override using the\n`.groups` argument.\n\n# Displaying mean soybean height for treatments across Weeks after application\nprint(summary_data)\n\n# A tibble: 10 × 3\n# Groups:   Treatment [2]\n   Treatment   WAT mean_height\n   &lt;fct&gt;     &lt;int&gt;       &lt;dbl&gt;\n 1 0             0        12.1\n 2 0             1        14.2\n 3 0             2        15.7\n 4 0             3        20.1\n 5 0             4        26.9\n 6 1             0        12.1\n 7 1             1        14.9\n 8 1             2        16.9\n 9 1             3        21.0\n10 1             4        28.4"
  },
  {
    "objectID": "Height_Analysis.html#plotting-mean-height-by-treatment-over-time",
    "href": "Height_Analysis.html#plotting-mean-height-by-treatment-over-time",
    "title": "Height Data Analysis",
    "section": "Plotting “Mean Height by Treatment Over Time”",
    "text": "Plotting “Mean Height by Treatment Over Time”"
  },
  {
    "objectID": "Height_Analysis.html#box-plots-showing-the-distribution-of-height-over-time.",
    "href": "Height_Analysis.html#box-plots-showing-the-distribution-of-height-over-time.",
    "title": "Height Data Analysis",
    "section": "Box plot’s showing the distribution of height over time.",
    "text": "Box plot’s showing the distribution of height over time."
  },
  {
    "objectID": "Height_Analysis.html#step-3-simple-analysis",
    "href": "Height_Analysis.html#step-3-simple-analysis",
    "title": "Height Data Analysis",
    "section": "Step 3: Simple Analysis",
    "text": "Step 3: Simple Analysis\nFitting models for simple linear Regression\n\n# Linear Regression for Height\n\n# Null Model\nlm_height_1 &lt;- lm(formula = Height ~ Treatment, data = data)\n\n# Partial Model\nlm_height_2 &lt;- lm(formula = Height ~ Treatment * WAT, data = data)\n\n# Full Model\nlm_height_3 &lt;- lm(formula = Height ~ Treatment * WAT * Field, data = data)\n\nChoosing the best model\n\n#ANOVA for differences in models \nanova(lm_height_1, lm_height_2, lm_height_3)\n\nAnalysis of Variance Table\n\nModel 1: Height ~ Treatment\nModel 2: Height ~ Treatment * WAT\nModel 3: Height ~ Treatment * WAT * Field\n  Res.Df   RSS Df Sum of Sq       F    Pr(&gt;F)    \n1   1344 87902                                   \n2   1342 51876  2     36026 644.794 &lt; 2.2e-16 ***\n3   1334 37267  8     14609  65.368 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# AIC to pick the best model\nAIC(lm_height_1, lm_height_2, lm_height_3)\n\n            df      AIC\nlm_height_1  3 9450.838\nlm_height_2  5 8745.000\nlm_height_3 13 8315.810\n\n# Model lm_height_3 has the lowest AIC\n\nBest Model: Model 3 Full Model\n\nsummary(lm_height_3)\n\n\nCall:\nlm(formula = Height ~ Treatment * WAT * Field, data = data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-17.2903  -3.2155  -0.0876   3.1029  19.7837 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           12.31979    0.74626  16.509  &lt; 2e-16 ***\nTreatment1            -0.01612    1.05537  -0.015 0.987814    \nWAT                    4.26400    0.27667  15.412  &lt; 2e-16 ***\nField2                -3.02230    1.18086  -2.559 0.010594 *  \nField3                -3.25640    0.94515  -3.445 0.000588 ***\nTreatment1:WAT         0.93382    0.39127   2.387 0.017142 *  \nTreatment1:Field2      1.09813    1.66934   0.658 0.510764    \nTreatment1:Field3      0.16590    1.33813   0.124 0.901351    \nWAT:Field2            -2.10073    0.43895  -4.786 1.89e-06 ***\nWAT:Field3            -0.20726    0.35166  -0.589 0.555706    \nTreatment1:WAT:Field2 -0.82662    0.61972  -1.334 0.182472    \nTreatment1:WAT:Field3 -0.98977    0.49974  -1.981 0.047844 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.285 on 1334 degrees of freedom\nMultiple R-squared:  0.5772,    Adjusted R-squared:  0.5738 \nF-statistic: 165.6 on 11 and 1334 DF,  p-value: &lt; 2.2e-16\n\n\nThe Interaction between Treatment1 (Tannin application) and WAT (Week after Treatment) is significant at alpha = 0.05"
  },
  {
    "objectID": "Height_Analysis.html#step-4-checking-model-assumptions",
    "href": "Height_Analysis.html#step-4-checking-model-assumptions",
    "title": "Height Data Analysis",
    "section": "Step 4: Checking Model Assumptions",
    "text": "Step 4: Checking Model Assumptions\nUsing a QQ plot to look for non-normal distributions of the model’s plotted residuals\n\nplot(lm_height_3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLooking at the plotted Q-Q Residuals, data does appear to be slightly non-normal. With the size of out data set, non-normality is probably fine\nAlso, I don’t believe that simple linear regression is appropriate model for out data. Because of the three fields design plan, we should switch the variable Field to a random factor to block the data. I’m currently reading up on Mixed Effects models that will allow us to fit a regression model with a blocking factor.\nA better fitting model will provide more accurate results."
  },
  {
    "objectID": "Height_Analysis.html#loading-and-subsetting-data",
    "href": "Height_Analysis.html#loading-and-subsetting-data",
    "title": "Height Data Analysis",
    "section": "",
    "text": "# Read the data\ndata &lt;- read.csv(\"Data.csv\", header=TRUE)\n\nSub setting data to:\n1) Only include values from unenclosed plants.\n2) Convert predictor variables to factors with “levels”.\n3) Remove rows with missing values (missing values = dead plant or sampling error).\n\n# Subset to remove Enclosure values\ndata &lt;- data[data$Enclosure == \"0\", ]\n\n# Convert categorical variables to factors\ndata$Field &lt;- as.factor(data$Field)\ndata$Plot &lt;- as.factor(data$Plot)\ndata$Treatment &lt;- as.factor(data$Treatment)\ndata$Enclosure &lt;- as.factor(data$Enclosure)\n\n# Remove rows with missing Height values\ndata &lt;- data |&gt;\n  filter(!is.na(Height))"
  },
  {
    "objectID": "Height_Analysis.html#exploratory-data-analysis",
    "href": "Height_Analysis.html#exploratory-data-analysis",
    "title": "Height Data Analysis",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nCalculating and Displaying mean soybean height for treatments across Weeks after application.\n\n# Calculate mean Height for each Treatment and WAT combination\nsummary_data &lt;- data |&gt;\n  group_by(Treatment, WAT) |&gt;\n  summarise(mean_height = mean(Height, na.rm = TRUE))\n\n`summarise()` has grouped output by 'Treatment'. You can override using the\n`.groups` argument.\n\n# Subset to remove WAT values at week zero\nsummary_data &lt;- summary_data[summary_data$WAT != \"0\", ]\n\n# Displaying mean soybean height for treatments across Weeks after application\nprint(summary_data)\n\n# A tibble: 8 × 3\n# Groups:   Treatment [2]\n  Treatment   WAT mean_height\n  &lt;fct&gt;     &lt;int&gt;       &lt;dbl&gt;\n1 0             1        14.2\n2 0             2        15.7\n3 0             3        20.1\n4 0             4        26.9\n5 1             1        14.9\n6 1             2        16.9\n7 1             3        21.0\n8 1             4        28.4"
  },
  {
    "objectID": "Height_Analysis.html#simple-analysis",
    "href": "Height_Analysis.html#simple-analysis",
    "title": "Height Data Analysis",
    "section": "Simple Analysis",
    "text": "Simple Analysis\nFitting models for simple linear Regression\n\n# Linear Regression for Height\n\n# Null Model\nlm_height_1 &lt;- lm(formula = Height ~ Treatment, data = data_subset)\n\n# Partial Model\nlm_height_2 &lt;- lm(formula = Height ~ Treatment * WAT, data = data_subset)\n\n# Full Model\nlm_height_3 &lt;- lm(formula = Height ~ Treatment * WAT * Field, data = data_subset)\n\nChoosing the best model\n\n#ANOVA for differences in models \nanova(lm_height_1, lm_height_2, lm_height_3)\n\nAnalysis of Variance Table\n\nModel 1: Height ~ Treatment\nModel 2: Height ~ Treatment * WAT\nModel 3: Height ~ Treatment * WAT * Field\n  Res.Df   RSS Df Sum of Sq       F    Pr(&gt;F)    \n1   1164 75668                                   \n2   1162 48909  2     26759 446.462 &lt; 2.2e-16 ***\n3   1154 34583  8     14326  59.755 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# AIC to pick the best model\nAIC(lm_height_1, lm_height_2, lm_height_3)\n\n            df      AIC\nlm_height_1  3 8180.427\nlm_height_2  5 7675.589\nlm_height_3 13 7287.457\n\n\nModel lm_height_3 has the lowest AIC score.\n\nsummary(lm_height_3)\n\n\nCall:\nlm(formula = Height ~ Treatment * WAT * Field, data = data_subset)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-18.0967  -3.6639  -0.0277   3.3068  19.1187 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)            10.6635     1.1374   9.375  &lt; 2e-16 ***\nTreatment1             -0.7688     1.6086  -0.478  0.63277    \nWAT                     4.7985     0.3932  12.203  &lt; 2e-16 ***\nField2                 -3.9803     1.8015  -2.209  0.02734 *  \nField3                 -4.2982     1.4427  -2.979  0.00295 ** \nTreatment1:WAT          1.1767     0.5561   2.116  0.03456 *  \nTreatment1:Field2       3.1266     2.5455   1.228  0.21959    \nTreatment1:Field3       1.5152     2.0454   0.741  0.45898    \nWAT:Field2             -1.7885     0.6242  -2.865  0.00424 ** \nWAT:Field3              0.1344     0.5002   0.269  0.78827    \nTreatment1:WAT:Field2  -1.4843     0.8811  -1.685  0.09232 .  \nTreatment1:WAT:Field3  -1.4172     0.7113  -1.992  0.04657 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.474 on 1154 degrees of freedom\nMultiple R-squared:  0.5448,    Adjusted R-squared:  0.5405 \nF-statistic: 125.6 on 11 and 1154 DF,  p-value: &lt; 2.2e-16\n\n\nThe Interaction between Treatment1 (Tannin application) and WAT (Week after Treatment) is significant at alpha = 0.05"
  },
  {
    "objectID": "Height_Analysis.html#checking-model-assumptions",
    "href": "Height_Analysis.html#checking-model-assumptions",
    "title": "Height Data Analysis",
    "section": "Checking Model Assumptions",
    "text": "Checking Model Assumptions\nUsing a QQ plot to look for non-normal distributions of the model’s plotted residuals\n\nplot(lm_height_3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLooking at the plotted Q-Q Residuals, data does appear to be slightly non-normal. With the size of out data set, non-normality is probably fine\nAlso, I don’t believe that simple linear regression is appropriate model for out data. Because of the three fields design plan, we should switch the variable Field to a random factor to block the data.\nA better fitting model will provide more accurate results.\nRemoval of outliers 1292, 1205, and 1314 may improve model fit. I’m unsure if this is correct because I only have 1166 observations in my dataset?"
  },
  {
    "objectID": "Height_Analysis.html#mixed-effects-model",
    "href": "Height_Analysis.html#mixed-effects-model",
    "title": "Height Data Analysis",
    "section": "Mixed Effects Model",
    "text": "Mixed Effects Model\n\n# Mixed-Effects Model for Height\n\n# Null Model\nmem_h_1 &lt;- glmmTMB(Height ~ Treatment, data = data_subset)\n\n# Partial Model 1\nmem_h_2 &lt;- glmmTMB(Height ~ Treatment * WAT, data = data_subset)\n\n# Partial Model 2\nmem_h_3 &lt;- glmmTMB(Height ~ Treatment * WAT * Field, data = data_subset)\n\n# Full Model with random effects for Field\nmem_h_4 &lt;- glmmTMB(Height ~ Treatment * WAT + (1 | Field), data = data_subset)\n\n# Full Model with random effects for Field/Plot\nmem_h_5 &lt;- glmmTMB(Height ~ Treatment * WAT + (1 | Plot) + (1 | Field), data = data_subset)"
  },
  {
    "objectID": "Height_Analysis.html#model-comparison-using-anova",
    "href": "Height_Analysis.html#model-comparison-using-anova",
    "title": "Height Data Analysis",
    "section": "Model Comparison using ANOVA",
    "text": "Model Comparison using ANOVA\n\n# Compare models using likelihood ratio test\nanova(mem_h_1, mem_h_2, mem_h_3, mem_h_4, mem_h_5)\n\nData: data_subset\nModels:\nmem_h_1: Height ~ Treatment, zi=~0, disp=~1\nmem_h_2: Height ~ Treatment * WAT, zi=~0, disp=~1\nmem_h_4: Height ~ Treatment * WAT + (1 | Field), zi=~0, disp=~1\nmem_h_5: Height ~ Treatment * WAT + (1 | Plot) + (1 | Field), zi=~0, disp=~1\nmem_h_3: Height ~ Treatment * WAT * Field, zi=~0, disp=~1\n        Df    AIC    BIC  logLik deviance   Chisq Chi Df Pr(&gt;Chisq)    \nmem_h_1  3 8180.4 8195.6 -4087.2   8174.4                              \nmem_h_2  5 7675.6 7700.9 -3832.8   7665.6 508.838      2     &lt;2e-16 ***\nmem_h_4  6 7341.1 7371.5 -3664.6   7329.1 336.460      1     &lt;2e-16 ***\nmem_h_5  7 7251.0 7286.4 -3618.5   7237.0  92.145      1     &lt;2e-16 ***\nmem_h_3 13 7287.5 7353.3 -3630.7   7261.5   0.000      6          1    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Height_Analysis.html#model-comparison-using-aic",
    "href": "Height_Analysis.html#model-comparison-using-aic",
    "title": "Height Data Analysis",
    "section": "Model comparison using AIC",
    "text": "Model comparison using AIC\n\n# AIC comparison\nAIC(mem_h_1, mem_h_2, mem_h_3, mem_h_4, mem_h_5)\n\n        df      AIC\nmem_h_1  3 8180.427\nmem_h_2  5 7675.589\nmem_h_3 13 7287.457\nmem_h_4  6 7341.129\nmem_h_5  7 7250.984"
  },
  {
    "objectID": "Height_Analysis.html#model-comparison-using-bic",
    "href": "Height_Analysis.html#model-comparison-using-bic",
    "title": "Height Data Analysis",
    "section": "Model comparison using BIC",
    "text": "Model comparison using BIC\n\n# BIC comparison\nBIC(mem_h_1, mem_h_2, mem_h_3, mem_h_4, mem_h_5)\n\n        df      BIC\nmem_h_1  3 8195.611\nmem_h_2  5 7700.895\nmem_h_3 13 7353.254\nmem_h_4  6 7371.497\nmem_h_5  7 7286.414"
  },
  {
    "objectID": "Height_Analysis.html#summary-of-best-fitted-model",
    "href": "Height_Analysis.html#summary-of-best-fitted-model",
    "title": "Height Data Analysis",
    "section": "Summary of best fitted model!",
    "text": "Summary of best fitted model!\n\n# Full model with nested random effects\nsummary(mem_h_5)\n\n Family: gaussian  ( identity )\nFormula:          Height ~ Treatment * WAT + (1 | Plot) + (1 | Field)\nData: data_subset\n\n     AIC      BIC   logLik deviance df.resid \n  7251.0   7286.4  -3618.5   7237.0     1159 \n\nRandom effects:\n\nConditional model:\n Groups   Name        Variance Std.Dev.\n Plot     (Intercept)  3.799   1.949   \n Field    (Intercept) 13.273   3.643   \n Residual             27.755   5.268   \nNumber of obs: 1166, groups:  Plot, 20; Field, 3\n\nDispersion estimate for gaussian family (sigma^2): 27.8 \n\nConditional model:\n               Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)      7.3838     2.2798   3.239   0.0012 ** \nTreatment1       0.6409     1.2204   0.525   0.5995    \nWAT              4.5028     0.2091  21.534   &lt;2e-16 ***\nTreatment1:WAT   0.1574     0.2978   0.529   0.5970    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nBest Fitted Model is the full model with nested random effects"
  },
  {
    "objectID": "Height_Analysis.html#model-diagnostics",
    "href": "Height_Analysis.html#model-diagnostics",
    "title": "Height Data Analysis",
    "section": "Model Diagnostics",
    "text": "Model Diagnostics\n\nExtracting model residuals\n\n# Extract residuals\nresiduals &lt;- resid(mem_h_5)\nfitted &lt;- fitted(mem_h_5)\n\n# Plot residuals vs fitted values\nplot(fitted, residuals, xlab = \"Fitted values\", ylab = \"Residuals\",\n     main = \"Residuals vs Fitted\")\nabline(h = 0, col = \"red\")\n\n\n\n\n\n\n\n\nPlotted Model Residuals vs Fitted Residuals deviation from a straight line indicates departure from normality assumption.\nThis invalidates our model results.\n\n\nNormality in Residuals\n\nqqnorm(residuals)\nqqline(residuals, col = \"red\")\n\n\n\n\n\n\n\n\nDeviation of Quantiles from a straight line at the ends indicate outliers.\nA log transformation may better fit the data to out model and allow our data to meet our models normality assumption."
  },
  {
    "objectID": "Height_Analysis.html#mixed-effects-model-with-log-transformation",
    "href": "Height_Analysis.html#mixed-effects-model-with-log-transformation",
    "title": "Height Data Analysis",
    "section": "Mixed Effects Model with Log transformation",
    "text": "Mixed Effects Model with Log transformation\n\n# Fit the mixed-effects model with log transformation on best model\nmem_h_log &lt;- glmmTMB(log(Height) ~ Treatment * WAT + (1 | Plot) + (1 | Field), data = data_subset)"
  },
  {
    "objectID": "Height_Analysis.html#aic-comparison-between-log-and-non-log-model",
    "href": "Height_Analysis.html#aic-comparison-between-log-and-non-log-model",
    "title": "Height Data Analysis",
    "section": "AIC comparison between log and non-log model",
    "text": "AIC comparison between log and non-log model\n\nAIC(mem_h_5, mem_h_log)\n\n          df       AIC\nmem_h_5    7 7250.9842\nmem_h_log  7  245.2822"
  },
  {
    "objectID": "Height_Analysis.html#bic-comparison",
    "href": "Height_Analysis.html#bic-comparison",
    "title": "Height Data Analysis",
    "section": "BIC comparison",
    "text": "BIC comparison\n\nBIC(mem_h_5, mem_h_log)\n\n          df       BIC\nmem_h_5    7 7286.4136\nmem_h_log  7  280.7115\n\n\nLog transformed model has drastically lower AIC and BIC."
  },
  {
    "objectID": "Height_Analysis.html#summary-of-best-fitting-model",
    "href": "Height_Analysis.html#summary-of-best-fitting-model",
    "title": "Height Data Analysis",
    "section": "Summary of Best fitting model",
    "text": "Summary of Best fitting model\n\nsummary(mem_h_log)\n\n Family: gaussian  ( identity )\nFormula:          log(Height) ~ Treatment * WAT + (1 | Plot) + (1 | Field)\nData: data_subset\n\n     AIC      BIC   logLik deviance df.resid \n   245.3    280.7   -115.6    231.3     1159 \n\nRandom effects:\n\nConditional model:\n Groups   Name        Variance Std.Dev.\n Plot     (Intercept) 0.008978 0.09475 \n Field    (Intercept) 0.035009 0.18711 \n Residual             0.068252 0.26125 \nNumber of obs: 1166, groups:  Plot, 20; Field, 3\n\nDispersion estimate for gaussian family (sigma^2): 0.0683 \n\nConditional model:\n                Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)     2.290736   0.116332  19.691   &lt;2e-16 ***\nTreatment1      0.074067   0.059913   1.236    0.216    \nWAT             0.222732   0.010369  21.480   &lt;2e-16 ***\nTreatment1:WAT -0.008018   0.014769  -0.543    0.587    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNo model significance between treatment with tannin and height variable, but a positive influence.\nStatistical Significance for Week After Treatment. This is to be expected during these growth stages\nNo model significance between tannin treatment and Week After Application, but a positive influence."
  },
  {
    "objectID": "Height_Analysis.html#log-transformed-model-diagnostics",
    "href": "Height_Analysis.html#log-transformed-model-diagnostics",
    "title": "Height Data Analysis",
    "section": "Log Transformed Model Diagnostics",
    "text": "Log Transformed Model Diagnostics\n\nExtracting model residuals\n\nresiduals_log &lt;- resid(mem_h_log)\nfitted_log &lt;- fitted(mem_h_log)\n\n# Plot residuals vs fitted values\nplot(fitted_log, residuals_log, xlab = \"Fitted values\", ylab = \"Residuals\",\n     main = \"Residuals vs Fitted\")\nabline(h = 0, col = \"red\")\n\n\n\n\n\n\n\n\nLog Transformation fixed normality assumption.\n\n\nNormality in Residuals\n\nqqnorm(residuals_log)\nqqline(residuals_log, col = \"red\")\n\n\n\n\n\n\n\n\nQuantiles from log transformation don’t fit the QQ line as well but the drastically lower AIC score indicates better model fit."
  },
  {
    "objectID": "Height_Analysis.html#loading-and-sub-setting-data",
    "href": "Height_Analysis.html#loading-and-sub-setting-data",
    "title": "Height Data Analysis",
    "section": "Loading and Sub setting Data",
    "text": "Loading and Sub setting Data\n\nReading in Data Source\n\n# Read the data\ndata &lt;- read.csv(\"Data.csv\", header=TRUE)\n\nSub setting data to:\n1) Only include values from plants that are exposed to browsing as opposed to those completely protected from browsing.\n2) Convert predictor variables to factors with “levels”.\n3) Remove rows with missing values (missing values = dead plant or sampling error).\n\n# Subset to remove Enclosure values\ndata &lt;- data[data$Enclosure == \"0\", ]\n\n# Convert categorical variables to factors\ndata$Field &lt;- as.factor(data$Field)\ndata$Plot &lt;- as.factor(data$Plot)\ndata$Treatment &lt;- as.factor(data$Treatment)\ndata$Enclosure &lt;- as.factor(data$Enclosure)\n\n# Remove rows with missing Height values\ndata &lt;- data |&gt;\n  filter(!is.na(Height))"
  },
  {
    "objectID": "Height_Analysis.html#removing-height-data-from-week-zero",
    "href": "Height_Analysis.html#removing-height-data-from-week-zero",
    "title": "Height Data Analysis",
    "section": "Removing Height Data from Week Zero",
    "text": "Removing Height Data from Week Zero\nMeasurements from week zero were taken as a baseline to show differences in height after tannins were applied. It should be excluded from analysis as measurements were taken before application of tannins and biases the results.\n\n# Subset to remove Height values at week zero\ndata_subset &lt;- data[data$WAT != \"0\", ]\n\n\nPlotting subset data\n\nggplot(data_subset, aes(x = factor(Treatment, levels = c(0, 1), labels = c(\"0%\", \"10%\")), y = Height, fill = factor(Treatment, labels = c(\"0%\", \"10%\")))) +\n  geom_boxplot() +\n  facet_wrap(~ WAT, nrow = 1) +  # Facet in a single row\n  labs(\n    x = \"Tannin Concentration\",\n    y = \"Soybean Height (cm)\",\n    fill = \"Tannin Concentration\"  # Update legend title\n  ) +\n  # Create a dummy aesthetic for WAT to generate a second legend\n  geom_point(aes(color = factor(WAT)), alpha = 0) +  # Invisible points to create the WAT legend\n  scale_color_discrete(name = \"Weeks After Treatment\") +  # Legend for WAT\n  theme(\n    legend.position = \"top\",\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),  # Center title and bold it\n    plot.margin = margin(t = 20, b = 20, l = 20, r = 20),  # Increase space between the figure and the edges\n    axis.text.x = element_text(size = 12)  # Adjust x-axis text size if necessary\n  )"
  },
  {
    "objectID": "Height_Analysis.html#removing-outliers",
    "href": "Height_Analysis.html#removing-outliers",
    "title": "Height Data Analysis",
    "section": "Removing outliers",
    "text": "Removing outliers\n\n# Does nothing because there are no corresponding values \ndata_subset &lt;- data_subset[-c(1205, 1292, 1314), ]"
  },
  {
    "objectID": "Height_Analysis.html#incoorporating-binary-variable-to-account-for-added-plants-after-week-2",
    "href": "Height_Analysis.html#incoorporating-binary-variable-to-account-for-added-plants-after-week-2",
    "title": "Height Data Analysis",
    "section": "Incoorporating binary variable to account for added plants after week 2",
    "text": "Incoorporating binary variable to account for added plants after week 2\n\ndata_subset$num_plants_change &lt;- ifelse(data_subset$WAT &gt;= 2, 1, 0)  \n\n\nRerunning best model with binary variable\n\nmem_log_adjusted &lt;- glmmTMB(log(Height) ~ Treatment * WAT + num_plants_change + (1 | Plot) + (1 | Field), data = data_subset)\n\n\n\nModel Diagnostics\n\nAIC(mem_log_adjusted)\n\n[1] 212.6285\n\n\nAIC with of model with binary variable is slightly lower then without (~2 points lower)\n\nsummary(mem_log_adjusted)\n\n Family: gaussian  ( identity )\nFormula:          \nlog(Height) ~ Treatment * WAT + num_plants_change + (1 | Plot) +  \n    (1 | Field)\nData: data_subset\n\n     AIC      BIC   logLik deviance df.resid \n   212.6    253.1    -98.3    196.6     1158 \n\nRandom effects:\n\nConditional model:\n Groups   Name        Variance Std.Dev.\n Plot     (Intercept) 0.008955 0.09463 \n Field    (Intercept) 0.035003 0.18709 \n Residual             0.066224 0.25734 \nNumber of obs: 1166, groups:  Plot, 20; Field, 3\n\nDispersion estimate for gaussian family (sigma^2): 0.0662 \n\nConditional model:\n                   Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)        2.325784   0.116348  19.990  &lt; 2e-16 ***\nTreatment1         0.072868   0.059427   1.226    0.220    \nWAT                0.263623   0.012323  21.393  &lt; 2e-16 ***\nnum_plants_change -0.171054   0.028839  -5.931 3.01e-09 ***\nTreatment1:WAT    -0.007487   0.014548  -0.515    0.607    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Height_Analysis.html#model-diagnostics-2",
    "href": "Height_Analysis.html#model-diagnostics-2",
    "title": "Height Data Analysis",
    "section": "Model Diagnostics",
    "text": "Model Diagnostics\n\nExtracting model residuals\n\nresiduals_adj &lt;- resid(mem_log_adjusted)\nfitted_adj &lt;- fitted(mem_log_adjusted)\n\n# Plot residuals vs fitted values\nplot(fitted_adj, residuals_adj, xlab = \"Fitted values\", ylab = \"Residuals\",\n     main = \"Residuals vs Fitted\")\nabline(h = 0, col = \"red\")\n\n\n\n\n\n\n\n\n\n\nNormality in Residuals\n\nqqnorm(residuals_adj)\nqqline(residuals_adj, col = \"red\")"
  },
  {
    "objectID": "Height_Analysis.html#continuing-analysis-for-other-response-variables",
    "href": "Height_Analysis.html#continuing-analysis-for-other-response-variables",
    "title": "Height Data Analysis",
    "section": "Continuing analysis for other response variables",
    "text": "Continuing analysis for other response variables\n\nClick here for analysis comparing soybean heights between plant protected from deer browsing and those exposed to browsing"
  },
  {
    "objectID": "Height_Analysis.html#incorporating-binary-variable-to-account-for-added-plants-after-week-2",
    "href": "Height_Analysis.html#incorporating-binary-variable-to-account-for-added-plants-after-week-2",
    "title": "Height Data Analysis",
    "section": "Incorporating binary variable to account for added plants after week 2",
    "text": "Incorporating binary variable to account for added plants after week 2\n\ndata_subset$num_plants_change &lt;- ifelse(data_subset$WAT &gt;= 2, 1, 0)  \n\n\nRerunning best model with binary variable\n\nmem_log_adjusted &lt;- glmmTMB(log(Height) ~ Treatment * WAT + num_plants_change + (1 | Plot) + (1 | Field), data = data_subset)\n\n\n\nModel Diagnostics\n\nAIC(mem_log_adjusted)\n\n[1] 212.6285\n\n\nAIC with of model with binary variable is slightly lower then without (~2 points lower)\n\nsummary(mem_log_adjusted)\n\n Family: gaussian  ( identity )\nFormula:          \nlog(Height) ~ Treatment * WAT + num_plants_change + (1 | Plot) +  \n    (1 | Field)\nData: data_subset\n\n     AIC      BIC   logLik deviance df.resid \n   212.6    253.1    -98.3    196.6     1158 \n\nRandom effects:\n\nConditional model:\n Groups   Name        Variance Std.Dev.\n Plot     (Intercept) 0.008955 0.09463 \n Field    (Intercept) 0.035003 0.18709 \n Residual             0.066224 0.25734 \nNumber of obs: 1166, groups:  Plot, 20; Field, 3\n\nDispersion estimate for gaussian family (sigma^2): 0.0662 \n\nConditional model:\n                   Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)        2.325784   0.116348  19.990  &lt; 2e-16 ***\nTreatment1         0.072868   0.059427   1.226    0.220    \nWAT                0.263623   0.012323  21.393  &lt; 2e-16 ***\nnum_plants_change -0.171054   0.028839  -5.931 3.01e-09 ***\nTreatment1:WAT    -0.007487   0.014548  -0.515    0.607    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "yield.html",
    "href": "yield.html",
    "title": "yield",
    "section": "",
    "text": "Looking at differences in yield (bushels/acre) based on tannin concentration (0%:control or 10%:treatment).\nResponse Variable:\n\nYield (bushles/acre)\n\nPredictor Variables:\n\nTannin.Concentration (0: Control, 1: Tannins)\nPlot (1-20)\n\nBelow is our process of fitting our data to the best possible model."
  },
  {
    "objectID": "yield.html#loading-data",
    "href": "yield.html#loading-data",
    "title": "yield",
    "section": "Loading Data",
    "text": "Loading Data\n\nReading in Data Source\n\n# Read the data\nyield_data &lt;- read.csv(\"yield_data.csv\", header=TRUE)\n\n\nyield_data\n\n  Plot Tannin.Concentration    Yield\n1    1                  10% 52.43956\n2    2                   0% 54.98120\n3    3                  10% 54.06598\n4    4                   0% 62.23295\n5    5                  10% 63.77959\n6    6                   0% 67.77881\n7    7                  10% 72.16440\n8    8                   0% 61.42910"
  },
  {
    "objectID": "yield.html#simple-linear-regression",
    "href": "yield.html#simple-linear-regression",
    "title": "yield",
    "section": "Simple Linear Regression",
    "text": "Simple Linear Regression\n\n# Linear Regression for Yield (Bushels/Acre)\n\nmem_yield_1 &lt;- glmmTMB(Yield ~ Tannin.Concentration, data = yield_data)\n\nmem_yield_2 &lt;- glmmTMB(Yield ~ Tannin.Concentration + Plot, data = yield_data) # Plot main effect\n\nmem_yield_3 &lt;- glmmTMB(Yield ~ Tannin.Concentration + (1 | Plot), data = yield_data) # Plot random effect"
  },
  {
    "objectID": "yield.html#model-comparison-using-anova",
    "href": "yield.html#model-comparison-using-anova",
    "title": "yield",
    "section": "Model Comparison using ANOVA",
    "text": "Model Comparison using ANOVA\n\n# Compare models using likelihood ratio test\nanova(mem_yield_1, mem_yield_2, mem_yield_3)\n\nData: yield_data\nModels:\nmem_yield_1: Yield ~ Tannin.Concentration, zi=~0, disp=~1\nmem_yield_2: Yield ~ Tannin.Concentration + Plot, zi=~0, disp=~1\nmem_yield_3: Yield ~ Tannin.Concentration + (1 | Plot), zi=~0, disp=~1\n            Df    AIC    BIC  logLik deviance  Chisq Chi Df Pr(&gt;Chisq)   \nmem_yield_1  3 58.594 58.832 -26.297   52.594                            \nmem_yield_2  4 52.075 52.393 -22.037   44.075 8.5188      1   0.003515 **\nmem_yield_3  4 60.594 60.911 -26.297   52.594 0.0000      0   1.000000   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "yield.html#model-comparison-using-aic",
    "href": "yield.html#model-comparison-using-aic",
    "title": "yield",
    "section": "Model comparison using AIC",
    "text": "Model comparison using AIC\n\nAIC(mem_yield_1, mem_yield_2, mem_yield_3)\n\n            df      AIC\nmem_yield_1  3 58.59357\nmem_yield_2  4 52.07482\nmem_yield_3  4 60.59357"
  },
  {
    "objectID": "yield.html#summary-of-best-model",
    "href": "yield.html#summary-of-best-model",
    "title": "yield",
    "section": "Summary of best Model",
    "text": "Summary of best Model\n\nsummary(mem_yield_2)\n\n Family: gaussian  ( identity )\nFormula:          Yield ~ Tannin.Concentration + Plot\nData: yield_data\n\n     AIC      BIC   logLik deviance df.resid \n    52.1     52.4    -22.0     44.1        4 \n\n\nDispersion estimate for gaussian family (sigma^2): 14.5 \n\nConditional model:\n                        Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)              49.8833     3.5572  14.023  &lt; 2e-16 ***\nTannin.Concentration10%   1.3513     2.7554   0.490    0.624    \nPlot                      2.3444     0.6013   3.899 9.65e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nModel indicates that differences in yield based on tannin concentrations are insignificant.\nWould an ANOVA be a more appropriate model?"
  },
  {
    "objectID": "enclosure_data.html",
    "href": "enclosure_data.html",
    "title": "Enclosure Analysis",
    "section": "",
    "text": "Looking at differences in mean soybean height between plants protected from browsing to those unprotected from browsing. Individuals exposed to browsing were exposed with variable treatment concentrations (0:control or 1:tannins). Additionally we investigated differences in mean height over time incorporating WAT (Week after application) as an additional predictor variable. Plot and Field as were included as nested random effects.\nResponse Variable:\n\nMean Height (cm)\n\nPredictor Variables:\n\nTreatment (0: Control, 1: Tannins)\nWAT (Week After Application: 1-4)\nEnclosure (0: Not Enclosed, 1: Enclosed)\nPlot (1-20)\nField (1-20)\n\nBelow is our process of fitting our data to the best possible model."
  },
  {
    "objectID": "enclosure_data.html#reading-in-data-source",
    "href": "enclosure_data.html#reading-in-data-source",
    "title": "Enclosure Analysis",
    "section": "Reading in Data Source",
    "text": "Reading in Data Source\n\n# Read the data\ndata &lt;- read.csv(\"Data.csv\", header=TRUE)\n\nSub setting data to:\n1) Convert predictor variables to factors with “levels”.\n2) Remove unneeded columns.\n3) Remove rows with missing Height values (missing values = dead plant or sampling error).\n4) Only include measurements from weeks 1 through 4\n\n# Convert categorical variables to factors\ndata$Field &lt;- as.factor(data$Field)\ndata$Plot &lt;- as.factor(data$Plot)\ndata$Treatment &lt;- as.factor(data$Treatment)\ndata$Enclosure &lt;- as.factor(data$Enclosure)\ndata$WAT &lt;- as.factor(data$WAT)\n\n# Remove rows with missing Height values and unused columns\ndata &lt;- data |&gt;\n  filter(!is.na(Height)) |&gt;\n  select(-PercentDamage)\n\n# Subset to remove WAT values at week zero\ndata &lt;- data[data$WAT != \"0\", ]"
  },
  {
    "objectID": "enclosure_data.html#exploratory-data-analysis",
    "href": "enclosure_data.html#exploratory-data-analysis",
    "title": "Enclosure Analysis",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nCalculating and Displaying mean soybean height for treatments across Weeks after application.\n\n# Calculate mean Height for each Treatment and WAT combination\nsummary_data &lt;- data |&gt;\n  group_by(Enclosure,Treatment, WAT) |&gt;\n  summarise(mean_height = mean(Height, na.rm = TRUE))\n\n`summarise()` has grouped output by 'Enclosure', 'Treatment'. You can override\nusing the `.groups` argument.\n\n# Displaying mean soybean height for treatments across Weeks after application\nhead(data)\n\n    Field Plot Treatment WAT Enclosure Height\n181     1    1         0   1         0   14.5\n182     1    1         0   1         0   12.5\n183     1    1         0   1         0   11.5\n184     1    1         0   1         0   16.0\n185     1    1         0   1         0   17.0\n186     1    1         0   1         0   19.5"
  },
  {
    "objectID": "enclosure_data.html#calculating-standard-error-for-each-group",
    "href": "enclosure_data.html#calculating-standard-error-for-each-group",
    "title": "Enclosure Analysis",
    "section": "Calculating standard error for each group",
    "text": "Calculating standard error for each group\n\n# Calculate mean and SE for each group\nenclosure_data &lt;- data |&gt;\n  group_by(WAT, Enclosure, Treatment) |&gt;\n  summarise(\n    mean_height = mean(Height),\n    se = sd(Height) / sqrt(n()),  # Calculate SD from raw data (Height)\n    .groups = \"drop\"\n  )"
  },
  {
    "objectID": "enclosure_data.html#simple-enclosure-height-analysis",
    "href": "enclosure_data.html#simple-enclosure-height-analysis",
    "title": "Enclosure Analysis",
    "section": "Simple enclosure height analysis",
    "text": "Simple enclosure height analysis\nFitting models for simple linear Regression\n\n# Linear Regression for Height\n\nlm_m_height_1 &lt;- lm(formula = mean_height ~ Treatment, data = enclosure_data)\n\nlm_m_height_2 &lt;- lm(formula = mean_height ~ Treatment * WAT, data = enclosure_data)\n\nlm_m_height_3 &lt;- lm(formula = mean_height ~ Treatment * WAT + Enclosure, data = enclosure_data)\n\nlm_m_height_4 &lt;- lm(formula = mean_height ~ Treatment + WAT + Enclosure, data = enclosure_data)\n\nChoosing the best model\n\n#ANOVA for differences in models \nanova(lm_m_height_1, lm_m_height_2, lm_m_height_3, lm_m_height_4)\n\nAnalysis of Variance Table\n\nModel 1: mean_height ~ Treatment\nModel 2: mean_height ~ Treatment * WAT\nModel 3: mean_height ~ Treatment * WAT + Enclosure\nModel 4: mean_height ~ Treatment + WAT + Enclosure\n  Res.Df    RSS Df Sum of Sq       F    Pr(&gt;F)    \n1     14 921.66                                   \n2      8 235.65  6    686.01 18.4829 0.0005743 ***\n3      7  43.30  1    192.35 31.0946 0.0008365 ***\n4     10  43.57 -3     -0.27  0.0144 0.9974263    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# AIC to pick the best model\nAIC(lm_m_height_1, lm_m_height_2, lm_m_height_3, lm_m_height_4)\n\n              df       AIC\nlm_m_height_1  3 116.26347\nlm_m_height_2  9 106.44236\nlm_m_height_3 10  81.33577\nlm_m_height_4  7  75.43391\n\n\nModel lm_m_height_4 has the lowest AIC score.\n\nsummary(lm_m_height_4)\n\n\nCall:\nlm(formula = mean_height ~ Treatment + WAT + Enclosure, data = enclosure_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.8833 -1.0958 -0.0441  1.0377  3.3098 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 12.51951    1.27821   9.795 1.92e-06 ***\nTreatment1  -0.04021    1.04365  -0.039 0.970027    \nWAT2         3.23288    1.47595   2.190 0.053302 .  \nWAT3         8.54519    1.47595   5.790 0.000175 ***\nWAT4        17.30287    1.47595  11.723 3.64e-07 ***\nEnclosure1   6.93453    1.04365   6.644 5.75e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.087 on 10 degrees of freedom\nMultiple R-squared:  0.9527,    Adjusted R-squared:  0.9291 \nF-statistic: 40.31 on 5 and 10 DF,  p-value: 2.607e-06\n\n\nLinear regression model indicates that treatment had no significant effect on mean soybean height. Model doesn’t quite show differences height based on treatment and enclosure. An ANOVA model may better show the relationship between treatment and heights of plants unprotected vs those that were protected."
  },
  {
    "objectID": "enclosure_data.html#way-anova",
    "href": "enclosure_data.html#way-anova",
    "title": "Enclosure Analysis",
    "section": "3-way anova",
    "text": "3-way anova\n\n# Main effect of Enclosure on mean height only\n# Plants within enclosures were not treated with tannins\nanova_mean_height &lt;- aov(mean_height ~ Treatment * WAT + Enclosure, data = enclosure_data)\n\n\nAIC(anova_mean_height)\n\n[1] 81.33577\n\n\n\nsummary(anova_mean_height)\n\n              Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nTreatment      1    0.0    0.01   0.001 0.975110    \nWAT            3  685.7  228.58  36.951 0.000116 ***\nEnclosure      1  192.4  192.35  31.095 0.000837 ***\nTreatment:WAT  3    0.3    0.09   0.014 0.997426    \nResiduals      7   43.3    6.19                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nANOVA model indicates that plants receiving treatment application and were exposed to browsing resulted in statistically different heights then those in enclosures."
  },
  {
    "objectID": "enclosure_data.html#continuing-analysis-for-other-response-variables",
    "href": "enclosure_data.html#continuing-analysis-for-other-response-variables",
    "title": "Enclosure Analysis",
    "section": "Continuing analysis for other response variables",
    "text": "Continuing analysis for other response variables\n\nClick here for the analysis on Browsing Damage"
  },
  {
    "objectID": "Percent_Damage.html",
    "href": "Percent_Damage.html",
    "title": "Percent Damage",
    "section": "",
    "text": "Looking at differences in soybean browsing percent damage based on Treatment (0:control or 1:tannins) over time. We included WAT (Week after application) as a predictor variable and Plot and Field as nested random effects.\nPercent Damage variable calculation = total number of petioles (leaf stems) supporting leaves damaged by deer divided by the total number of petioles on the plant\nResponse Variable:\n\nPercent Damage\n\nPredictor Variables:\n\nTreatment (0: Control, 1: Tannins)\nWAT (Week After Application: 1-4)\nPlot (1-20)\nField (1-20)\n\nBelow is our process of fitting our data to the best possible model."
  },
  {
    "objectID": "Percent_Damage.html#loading-and-subsetting-data",
    "href": "Percent_Damage.html#loading-and-subsetting-data",
    "title": "Percent Damage",
    "section": "Loading and Subsetting Data",
    "text": "Loading and Subsetting Data\n\nReading in Data Source\n\n# Read the data\ndata &lt;- read.csv(\"Data.csv\", header=TRUE)\n\nSubsetting data to:\n1) Only include observations from plants exposed to browsing.\n2) Convert predictor variables to factors with “levels”.\n3) Remove rows with missing Height values (missing values = dead plant or sampling error).\n4) Only include measurements from weeks 1 through 4\n\n# Subset to remove Enclosure values\ndata &lt;- data[data$Enclosure == \"0\", ]\n\n# Convert categorical variables to factors\ndata$Field &lt;- as.factor(data$Field)\ndata$Plot &lt;- as.factor(data$Plot)\ndata$Treatment &lt;- as.factor(data$Treatment)\ndata$Enclosure &lt;- as.factor(data$Enclosure)\n\n# Remove rows with missing Height values\n# Remove values where WAT = 0\ndata &lt;- data |&gt;\n  filter(!is.na(Height)) |&gt;\n  filter(WAT != 0)"
  },
  {
    "objectID": "Percent_Damage.html#exploratory-data-analysis",
    "href": "Percent_Damage.html#exploratory-data-analysis",
    "title": "Percent Damage",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nCalculating and displaying mean soybean Percent Damage for treatments across weeks after application.\n\n# Calculate mean Percent Height for each Treatment and WAT combination\nsummary_data &lt;- data |&gt;\n  group_by(Treatment, WAT) |&gt;\n  summarise(mean_pd = mean(PercentDamage, na.rm = TRUE))\n\n`summarise()` has grouped output by 'Treatment'. You can override using the\n`.groups` argument.\n\n# Displaying mean soybean height for treatments across Weeks after application\nprint(summary_data)\n\n# A tibble: 8 × 3\n# Groups:   Treatment [2]\n  Treatment   WAT mean_pd\n  &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;\n1 0             1    5.92\n2 0             2    8.90\n3 0             3    6.17\n4 0             4    5.37\n5 1             1    2.19\n6 1             2    4.69\n7 1             3    5.05\n8 1             4    5.00\n\n\n\nPlotting “Mean Height by Treatment Over Time”\n\n\n\n\n\n\n\n\n\n\n\nSide by side bar plots\n\nggplot(summary_data, aes(x = as.factor(WAT), y = mean_pd, fill = factor(Treatment, levels = c(0, 1), labels = c(\"0%\", \"10%\")), group = Treatment)) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.8), width = 0.6) + # Side-by-side bars\n  # Black outline trendlines (not included in the legend)\n  geom_smooth(\n    aes(group = Treatment),\n    method = \"lm\",\n    se = FALSE,\n    size = 2, # Thicker black line for the outline\n    color = \"black\",\n    show.legend = FALSE  # Remove trendlines from the legend\n  ) +\n  # Colored trendlines (not included in the legend)\n  geom_smooth(\n    aes(color = factor(Treatment, levels = c(0, 1), labels = c(\"0%\", \"10%\"))),\n    method = \"lm\",\n    se = FALSE,\n    size = 0.8, # Slightly thinner line for the color\n    show.legend = FALSE  # Remove trendlines from the legend\n  ) +\n  labs(\n    x = \"Weeks After Tannin Application\",\n    y = \"Mean Percent Soybean Damage\",\n    fill = \"Tannin Concentration\"  # Legend title update\n  ) +\n  theme(\n    legend.position = \"top\",\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),  # Center title and bold it\n    plot.margin = margin(t = 20, b = 20, l = 20, r = 20),  # Increase space between the figure and the edges\n    axis.text.x = element_text(size = 12)  # Adjust x-axis text size if necessary\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nDecrease in mean of untreated (Treatment = 0) Percent Damage vales after week 2 because of the rate of browsing is lower then the rate of stem growth. For example, a plant in week one may experience browsing on 2/7 stems resulting in 28% of total stems browsed but in week two the same plant may have grown two new stems without experiencing any more browsing resulting a reduction of browsing on total number of stems to 22%.\n\n\nScatter plot’s showing the distribution of Percent Damage over time.\n\n\n\n\n\n\n\n\n\n\n\nHistogram showing the distribution of Percent Damage over time.\n\nggplot(data, aes(x = PercentDamage, fill = factor(Treatment))) +\n  geom_histogram(binwidth = 10, color = \"black\", alpha = 0.7) +  # Histogram with bins of width 10\n  facet_grid(Treatment ~ WAT) +  # Facet rows by Treatment and columns by WAT\n  labs(\n    title = \"Distribution of Percent Damage by Treatment and Weeks After Treatment\",\n    x = \"Percent Damage\",\n    y = \"Count\",\n    fill = \"Treatment\"  # Legend title for the fill aesthetic\n  ) +\n  theme(\n    legend.position = \"right\",  # Place legend on the right\n    plot.title = element_text(hjust = 0.5, size = 14),  # Center title and increase font size\n    strip.text = element_text(size = 12)  # Adjust facet label text size\n  )\n\n\n\n\n\n\n\n\n\n\nScatter plot\n\nggplot(data, aes(x = factor(WAT), y = PercentDamage, color = factor(Treatment), group = Treatment)) +\n  geom_point(position = position_jitter(width = 0.2, height = 0), alpha = 0.7) +  # Jittered scatter points\n  geom_smooth(method = \"lm\", se = FALSE, linetype = \"dashed\", size = 1) +  # Add a trend line\n  facet_grid(~ Treatment) +  # Facet columns by Treatment\n  labs(\n    title = \"Scatter Plot of Percent Damage by Treatment with Trend Lines\",\n    x = \"Weeks After Treatment\",\n    y = \"Percent Damage\",\n    color = \"Treatment\"  # Legend title for the color aesthetic\n  ) +\n  theme(\n    legend.position = \"right\",  # Place legend on the right\n    plot.title = element_text(hjust = 0.5, size = 14),  # Center title and increase font size\n    strip.text = element_text(size = 12)  # Adjust facet label text size\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThe distribution of the data may indicate that a zero-inflated model is necessary."
  },
  {
    "objectID": "Percent_Damage.html#simple-analysis",
    "href": "Percent_Damage.html#simple-analysis",
    "title": "Percent Damage",
    "section": "Simple Analysis",
    "text": "Simple Analysis\n\nFitting models for simple linear Regression\n\n# Linear Regression for Height\n\n# Null Model\nlm_pd_1 &lt;- lm(formula = PercentDamage ~ Treatment, data = data)\n\n# Partial Model\nlm_pd_2 &lt;- lm(formula = PercentDamage ~ Treatment * WAT, data = data)\n\n# Full Model\nlm_pd_3 &lt;- lm(formula = PercentDamage ~ Treatment * WAT * Field, data = data)\n\n\n\nChoosing the best model\n\n#ANOVA for differences in models \nanova(lm_pd_1, lm_pd_2, lm_pd_3)\n\nAnalysis of Variance Table\n\nModel 1: PercentDamage ~ Treatment\nModel 2: PercentDamage ~ Treatment * WAT\nModel 3: PercentDamage ~ Treatment * WAT * Field\n  Res.Df    RSS Df Sum of Sq      F    Pr(&gt;F)    \n1   1164 169582                                  \n2   1162 168922  2     660.4 2.3205   0.09868 .  \n3   1154 164204  8    4717.8 4.1445 6.765e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# AIC to pick the best model\nAIC(lm_pd_1, lm_pd_2, lm_pd_3)\n\n        df      AIC\nlm_pd_1  3 9121.362\nlm_pd_2  5 9120.812\nlm_pd_3 13 9103.784\n\n\nModel lm_pd_3 has the lowest AIC score.\nThe AIC score is very high, model most likely doesn’t fit the data well. The scatter plots and histograms above indicate many values at zero, may need to fit a zero inflated model. To account for the design of the experiment, will most likely need block by Field/Plot. A zero inflated mixed-effects model may be the best option.\n\nsummary(lm_pd_3)\n\n\nCall:\nlm(formula = PercentDamage ~ Treatment * WAT * Field, data = data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-16.782  -5.841  -4.413  -1.501  94.531 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)             4.7977     2.4785   1.936  0.05314 .  \nTreatment1             -0.2429     3.5051  -0.069  0.94476    \nWAT                    -0.1922     0.8569  -0.224  0.82260    \nField2                 16.4344     3.9254   4.187 3.05e-05 ***\nField3                  0.9713     3.1437   0.309  0.75740    \nTreatment1:WAT          0.2642     1.2118   0.218  0.82742    \nTreatment1:Field2     -15.5537     5.5467  -2.804  0.00513 ** \nTreatment1:Field3      -5.4721     4.4569  -1.228  0.21978    \nWAT:Field2             -4.2582     1.3602  -3.130  0.00179 ** \nWAT:Field3              0.7017     1.0899   0.644  0.51984    \nTreatment1:WAT:Field2   4.2199     1.9198   2.198  0.02814 *  \nTreatment1:WAT:Field3   0.6731     1.5499   0.434  0.66419    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 11.93 on 1154 degrees of freedom\nMultiple R-squared:  0.03975,   Adjusted R-squared:  0.0306 \nF-statistic: 4.343 on 11 and 1154 DF,  p-value: 2.155e-06\n\n\nNo model significance of Treatment or WAT variables as well as Treatment:WAT interaction.\n\n\nChecking Model Assumptions\nUsing a QQ plot to look for non-normal distributions of the model’s plotted residuals.\n\nplot(lm_pd_3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLooking at the plotted Q-Q Residuals, data does appear to be non-normal with outliers.\nA better fitting model will provide more accurate results. As mentioned earlier a zero-inflated mixed effects model may be fit the data better.\nOutlier observations 61, 485, and 75 may need to be removed."
  },
  {
    "objectID": "Percent_Damage.html#more-in-depth-analysis",
    "href": "Percent_Damage.html#more-in-depth-analysis",
    "title": "Percent Damage",
    "section": "More In-depth Analysis",
    "text": "More In-depth Analysis\n\nFitting a Mixed-Effects Model for Percent Damage using the glmmTMB Package.\n\n# Mixed-Effects Model for Percent Damage\n\n# Null Model\nmem_pd_1 &lt;- glmmTMB(PercentDamage ~ Treatment, data = data)\n\n# Partial Model 1\nmem_pd_2 &lt;- glmmTMB(PercentDamage ~ Treatment * WAT, data = data)\n\n# Partial Model 2\nmem_pd_3 &lt;- glmmTMB(PercentDamage ~ Treatment * WAT * Field, data = data)\n\n# Full Model with random effects for Field\nmem_pd_4 &lt;- glmmTMB(PercentDamage ~ Treatment * WAT + (1 | Field), data = data)\n\n# Full Model with random effects for Field/Plot\nmem_pd_5 &lt;- glmmTMB(PercentDamage ~ Treatment * WAT + (1 | Plot) + (1 | Field), data = data)\n\n\n\nModel Comparison using ANOVA\n\n# Compare models using likelihood ratio test\nanova(mem_pd_1, mem_pd_2, mem_pd_3, mem_pd_4, mem_pd_5)\n\nData: data\nModels:\nmem_pd_1: PercentDamage ~ Treatment, zi=~0, disp=~1\nmem_pd_2: PercentDamage ~ Treatment * WAT, zi=~0, disp=~1\nmem_pd_4: PercentDamage ~ Treatment * WAT + (1 | Field), zi=~0, disp=~1\nmem_pd_5: PercentDamage ~ Treatment * WAT + (1 | Plot) + (1 | Field), zi=~0, disp=~1\nmem_pd_3: PercentDamage ~ Treatment * WAT * Field, zi=~0, disp=~1\n         Df    AIC    BIC  logLik deviance   Chisq Chi Df Pr(&gt;Chisq)    \nmem_pd_1  3 9121.4 9136.5 -4557.7   9115.4                              \nmem_pd_2  5 9120.8 9146.1 -4555.4   9110.8  4.5495      2     0.1028    \nmem_pd_4  6 9121.2 9151.5 -4554.6   9109.2  1.6598      1     0.1976    \nmem_pd_5  7 9070.3 9105.7 -4528.1   9056.3 52.8970      1  3.515e-13 ***\nmem_pd_3 13 9103.8 9169.6 -4538.9   9077.8  0.0000      6     1.0000    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nModel Comparison using AIC\n\n# AIC comparison\nAIC(mem_pd_1, mem_pd_2, mem_pd_3, mem_pd_4, mem_pd_5)\n\n         df      AIC\nmem_pd_1  3 9121.362\nmem_pd_2  5 9120.812\nmem_pd_3 13 9103.784\nmem_pd_4  6 9121.153\nmem_pd_5  7 9070.256\n\n\nANOVA and AIC indicate that mem_pd_5 is the best model\n\n\nSummary of best fitted model!\n\n# Full model with nested random effects\nsummary(mem_pd_5)\n\n Family: gaussian  ( identity )\nFormula:          PercentDamage ~ Treatment * WAT + (1 | Plot) + (1 | Field)\nData: data\n\n     AIC      BIC   logLik deviance df.resid \n  9070.3   9105.7  -4528.1   9056.3     1159 \n\nRandom effects:\n\nConditional model:\n Groups   Name        Variance  Std.Dev. \n Plot     (Intercept) 1.070e+01 3.271e+00\n Field    (Intercept) 6.703e-07 8.187e-04\n Residual             1.342e+02 1.158e+01\nNumber of obs: 1166, groups:  Plot, 20; Field, 3\n\nDispersion estimate for gaussian family (sigma^2):  134 \n\nConditional model:\n               Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)      8.6355     1.6802   5.139 2.76e-07 ***\nTreatment1      -6.0038     2.3807  -2.522   0.0117 *  \nWAT             -0.7358     0.4598  -1.600   0.1095    \nTreatment1:WAT   1.4051     0.6548   2.146   0.0319 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nModel significance for Treatment variable as well as the Treatment:WAT interaction."
  },
  {
    "objectID": "Percent_Damage.html#model-diagnostics",
    "href": "Percent_Damage.html#model-diagnostics",
    "title": "Percent Damage",
    "section": "Model Diagnostics",
    "text": "Model Diagnostics\n\nExtracting model residuals\n\n# Extract residuals\nresiduals &lt;- resid(mem_pd_5)\nfitted &lt;- fitted(mem_pd_5)\n\n# Plot residuals vs fitted values\nplot(fitted, residuals, xlab = \"Fitted values\", ylab = \"Residuals\",\n     main = \"Residuals vs Fitted\")\nabline(h = 0, col = \"red\")\n\n\n\n\n\n\n\n\n\nqqnorm(residuals)\nqqline(residuals, col = \"red\")\n\n\n\n\n\n\n\n\nAlthough this model shows significance for treatment and the treatment:WAT interaction, the high AIC and plotted residuals are troubling (better, but still troubling)."
  },
  {
    "objectID": "Percent_Damage.html#fitting-a-zero-inflated-mixed-effects-model-for-percent-damage-using-the-glmmtmb-package.",
    "href": "Percent_Damage.html#fitting-a-zero-inflated-mixed-effects-model-for-percent-damage-using-the-glmmtmb-package.",
    "title": "Percent Damage",
    "section": "Fitting a Zero Inflated Mixed-Effects Model for Percent Damage using the glmmTMB Package.",
    "text": "Fitting a Zero Inflated Mixed-Effects Model for Percent Damage using the glmmTMB Package.\nThe glmmTMB package was designed for zero-inflated count data (i.e., data containing more zeros than would be expected from the standard error distributions in other mixed models). Models that ignore zero-inflation, or treat it like over dispersion, tend to resulted in biased parameter estimates (Harrison, 2014).\n\nRounding Percent Damage values for modeling.\n\ndata &lt;- data |&gt;\n  mutate(pd_round = round(PercentDamage))\n\nFitting zero-inflated mixed effects models using a poisson distribution. Originally, I included a model with a negative binomial distribution but had model convergence problems resulting in non-positive-definite Hessian matrix = NA values for likelihood/AIC/etc.\n\n# diagnoses of lowest AIC negative binomial zero-inflated model (zi_nb_pd_5) \n# Unusually large coefficients (|x|&gt;10):\n\n# zi~(Intercept)    zi~pd_round \n#       22.56691      -13.57655 \n\nModel diagnosis: Large negative coefficients in zi (log-odds of zero-inflation), dispersion, or random effects (log-standard deviations) suggest unnecessary components (converging to zero on the constrained scale); large negative and/or positive components in binomial or Poisson conditional parameters suggest (quasi-)complete separation. Large values of nbinom2 dispersion suggest that you should use a Poisson model instead.\n\n\nFitting Zero Inflated Poisson Mixed-Effects Model\n\n# Zero Inflated Poisson Mixed-Effects Model for Percent Damage\n# Doing my due diligence and fitting all possible models\n\n# Null Model\nzi_pois_pd_1 &lt;- glmmTMB(pd_round ~ Treatment, zi = ~pd_round,\n  family = poisson, data = data)\n\n# Partial Model 1\nzi_pois_pd_2 &lt;- glmmTMB(pd_round ~ Treatment * WAT, zi = ~pd_round,\n  family = poisson, data = data)\n\n# Partial Model 2\nzi_pois_pd_3 &lt;- glmmTMB(pd_round ~ Treatment * WAT * Field, zi = ~pd_round,\n  family = poisson, data = data)\n\n# Full Model with random effects for Field\nzi_pois_pd_4 &lt;- glmmTMB(pd_round ~ Treatment * WAT + (1 | Field), zi = ~pd_round,\n  family = poisson, data = data)\n\n# Full Model with random effects for Field/Plot\nzi_pois_pd_5 &lt;- glmmTMB(pd_round ~ Treatment * WAT + (1 | Plot) + (1 | Field), zi = ~pd_round,\n  family = poisson, data = data)\n\n\n\nModel Comparison using ANOVA\n\nanova(zi_pois_pd_1, zi_pois_pd_2, zi_pois_pd_3, zi_pois_pd_4, zi_pois_pd_5)\n\nData: data\nModels:\nzi_pois_pd_1: pd_round ~ Treatment, zi=~pd_round, disp=~1\nzi_pois_pd_2: pd_round ~ Treatment * WAT, zi=~pd_round, disp=~1\nzi_pois_pd_4: pd_round ~ Treatment * WAT + (1 | Field), zi=~pd_round, disp=~1\nzi_pois_pd_5: pd_round ~ Treatment * WAT + (1 | Plot) + (1 | Field), zi=~pd_round, disp=~1\nzi_pois_pd_3: pd_round ~ Treatment * WAT * Field, zi=~pd_round, disp=~1\n             Df    AIC    BIC  logLik deviance  Chisq Chi Df Pr(&gt;Chisq)    \nzi_pois_pd_1  4 3323.4 3343.7 -1657.7   3315.4                             \nzi_pois_pd_2  6 3096.3 3126.6 -1542.1   3084.3 231.17      2     &lt;2e-16 ***\nzi_pois_pd_4  7 2958.2 2993.6 -1472.1   2944.2 140.09      1     &lt;2e-16 ***\nzi_pois_pd_5  8 2798.3 2838.8 -1391.2   2782.3 161.85      1     &lt;2e-16 ***\nzi_pois_pd_3 14 2826.6 2897.5 -1399.3   2798.6   0.00      6          1    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nModel comparison using AIC\n\nAIC(zi_pois_pd_1, zi_pois_pd_2, zi_pois_pd_3, zi_pois_pd_4, zi_pois_pd_5)\n\n             df      AIC\nzi_pois_pd_1  4 3323.426\nzi_pois_pd_2  6 3096.260\nzi_pois_pd_3 14 2826.627\nzi_pois_pd_4  7 2958.172\nzi_pois_pd_5  8 2798.319\n\n\nModel zi_pois_pd_5 has the lowest AIC.\n\n\nSummary of best fitted model\n\nsummary(zi_pois_pd_5)\n\n Family: poisson  ( log )\nFormula:          pd_round ~ Treatment * WAT + (1 | Plot) + (1 | Field)\nZero inflation:            ~pd_round\nData: data\n\n     AIC      BIC   logLik deviance df.resid \n  2798.3   2838.8  -1391.2   2782.3     1158 \n\nRandom effects:\n\nConditional model:\n Groups Name        Variance Std.Dev.\n Plot   (Intercept) 0.04092  0.2023  \n Field  (Intercept) 0.02898  0.1702  \nNumber of obs: 1166, groups:  Plot, 20; Field, 3\n\nConditional model:\n               Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)     3.73688    0.12747  29.315  &lt; 2e-16 ***\nTreatment1     -0.26928    0.12504  -2.154  0.03127 *  \nWAT            -0.22586    0.01696 -13.316  &lt; 2e-16 ***\nTreatment1:WAT  0.08038    0.02821   2.849  0.00438 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nZero-inflation model:\n             Estimate Std. Error z value Pr(&gt;|z|)\n(Intercept)     22.50    2578.74   0.009    0.993\npd_round       -10.16  195845.82   0.000    1.000\n\n\nModel significance in treatment (condensed tannin repellent).\nModel significance is Treatment:WAT interaction."
  },
  {
    "objectID": "Percent_Damage.html#model-diagnostics-1",
    "href": "Percent_Damage.html#model-diagnostics-1",
    "title": "Percent Damage",
    "section": "Model Diagnostics",
    "text": "Model Diagnostics\n\nExtracting model residuals\n\n# Extract residuals\nresiduals_zi_pois &lt;- resid(zi_pois_pd_5)\nfitted_zi_pois &lt;- fitted(zi_pois_pd_5)\n\n# Plot residuals vs fitted values\nplot(fitted_zi_pois, residuals_zi_pois, xlab = \"Fitted values\", ylab = \"Residuals\",\n     main = \"Residuals vs Fitted\")\nabline(h = 0, col = \"red\")\n\n\n\n\n\n\n\n\n\nqqnorm(residuals_zi_pois)\nqqline(residuals_zi_pois, col = \"red\")\n\n\n\n\n\n\n\n\nThe deviance of the residuals from the QQ line is concerning…could just be zero-inflated model fit.\nMy next step is to remove the outliers and try refitting my models."
  },
  {
    "objectID": "Percent_Damage.html#removing-outliers-and-refitting-zero-inflated-poisson-model.",
    "href": "Percent_Damage.html#removing-outliers-and-refitting-zero-inflated-poisson-model.",
    "title": "Percent Damage",
    "section": "Removing Outliers and refitting zero-inflated poisson model.",
    "text": "Removing Outliers and refitting zero-inflated poisson model.\nI’m only refitting my best zero-inflated poisson model as that had the overall lowest AIC score.\n\nRemoving outliers\n\ndata_rm_outliers &lt;- data[-c(61, 485, 75), ]\n\n\n\nRefitting best zero-inflated negative binomial model\n\n# Full Model with nested random effects for Field and Plot\nzi_pois_pd_outliers &lt;- glmmTMB(pd_round ~ Treatment * WAT + (1 | Plot) + (1 | Field), zi = ~pd_round,\n  family = poisson, data = data_rm_outliers)\n\n\n\nSummary of best fitted model\n\nsummary(zi_pois_pd_outliers)\n\n Family: poisson  ( log )\nFormula:          pd_round ~ Treatment * WAT + (1 | Plot) + (1 | Field)\nZero inflation:            ~pd_round\nData: data_rm_outliers\n\n     AIC      BIC   logLik deviance df.resid \n  2529.6   2570.1  -1256.8   2513.6     1155 \n\nRandom effects:\n\nConditional model:\n Groups Name        Variance Std.Dev.\n Plot   (Intercept) 0.03933  0.1983  \n Field  (Intercept) 0.01744  0.1321  \nNumber of obs: 1163, groups:  Plot, 20; Field, 3\n\nConditional model:\n               Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)     3.60692    0.11135   32.39  &lt; 2e-16 ***\nTreatment1     -0.33059    0.12659   -2.61 0.009017 ** \nWAT            -0.18847    0.01738  -10.85  &lt; 2e-16 ***\nTreatment1:WAT  0.09868    0.02918    3.38 0.000721 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nZero-inflation model:\n             Estimate Std. Error z value Pr(&gt;|z|)\n(Intercept)    22.322   2362.854   0.009    0.992\npd_round       -8.963  10835.100  -0.001    0.999\n\n\nIncreased model significance for all predictor variables!\n\n\nDifference in AIC between zero-inflated model and zero-inflated model with outliers removed\n\nAIC(zi_pois_pd_5, zi_pois_pd_outliers)\n\nWarning in AIC.default(zi_pois_pd_5, zi_pois_pd_outliers): models are not all\nfitted to the same number of observations\n\n\n                    df      AIC\nzi_pois_pd_5         8 2798.319\nzi_pois_pd_outliers  8 2529.585\n\n\nAIC score for model without outliers is ~270 points lower."
  },
  {
    "objectID": "Percent_Damage.html#model-diagnostics-2",
    "href": "Percent_Damage.html#model-diagnostics-2",
    "title": "Percent Damage",
    "section": "Model Diagnostics",
    "text": "Model Diagnostics\n\nExtracting model residuals\n\n# Extract residuals\nresiduals_zi_pois_outlier &lt;- resid(zi_pois_pd_outliers)\nfitted_zi_pois_outier &lt;- fitted(zi_pois_pd_outliers)\n\n# Plot residuals vs fitted values\nplot(fitted_zi_pois_outier, residuals_zi_pois_outlier, xlab = \"Fitted values\", ylab = \"Residuals\",\n     main = \"Residuals vs Fitted\")\nabline(h = 0, col = \"red\")\n\n\n\n\n\n\n\n\n\nqqnorm(residuals_zi_pois_outlier)\nqqline(residuals_zi_pois_outlier, col = \"red\")\n\n\n\n\n\n\n\n\nPlotted Q-Q plot residuals looks slightly better."
  },
  {
    "objectID": "Percent_Damage.html#checking-for-over-dispersion",
    "href": "Percent_Damage.html#checking-for-over-dispersion",
    "title": "Percent Damage",
    "section": "Checking for Over Dispersion",
    "text": "Checking for Over Dispersion\n\n# Simulate residuals for the fitted model\nsim_res &lt;- simulateResiduals(fittedModel = zi_pois_pd_outliers)\n\n\n# Plot residuals\nplot(sim_res)\n\nDHARMa:testOutliers with type = binomial may have inflated Type I error rates for integer-valued distributions. To get a more exact result, it is recommended to re-run testOutliers with type = 'bootstrap'. See ?testOutliers for details\n\n\n\n\n\n\n\n\n\nTest for over dispersion failed, issues with code…"
  },
  {
    "objectID": "Percent_Damage.html#incoorporating-binary-variable-to-account-for-added-plants-after-week-2",
    "href": "Percent_Damage.html#incoorporating-binary-variable-to-account-for-added-plants-after-week-2",
    "title": "Percent Damage",
    "section": "Incoorporating binary variable to account for added plants after week 2",
    "text": "Incoorporating binary variable to account for added plants after week 2\n\ndata_rm_outliers$num_plants_change &lt;- ifelse(data_rm_outliers$WAT &gt;= 2, 1, 0)  \n\n\nRerunning best model with binary variable\n\nzi_pois_adjusted &lt;- glmmTMB(pd_round ~ Treatment * WAT + num_plants_change +  \n                              (1 | Field) + (1 | Plot),  \n                            zi = ~pd_round,  \n                            family = poisson,  \n                            data = data_rm_outliers)  \n\n\n\nModel Diagnostics\n\nAIC(zi_pois_adjusted)\n\n[1] 2527.698\n\n\nAIC with of model with binary variable is slightly lower then without (~2 points lower)\n\nsummary(zi_pois_adjusted)\n\n Family: poisson  ( log )\nFormula:          \npd_round ~ Treatment * WAT + num_plants_change + (1 | Field) +      (1 | Plot)\nZero inflation:            ~pd_round\nData: data_rm_outliers\n\n     AIC      BIC   logLik deviance df.resid \n  2527.7   2573.2  -1254.8   2509.7     1154 \n\nRandom effects:\n\nConditional model:\n Groups Name        Variance Std.Dev.\n Field  (Intercept) 0.01696  0.1302  \n Plot   (Intercept) 0.03858  0.1964  \nNumber of obs: 1163, groups:  Field, 3; Plot, 20\n\nConditional model:\n                  Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)        3.56716    0.11244   31.73  &lt; 2e-16 ***\nTreatment1        -0.36786    0.12777   -2.88 0.003989 ** \nWAT               -0.21028    0.02067  -10.17  &lt; 2e-16 ***\nnum_plants_change  0.11283    0.05755    1.96 0.049916 *  \nTreatment1:WAT     0.10976    0.02993    3.67 0.000245 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nZero-inflation model:\n             Estimate Std. Error z value Pr(&gt;|z|)\n(Intercept)    22.903   3159.571   0.007    0.994\npd_round       -9.651  45209.061   0.000    1.000\n\n\n\n# Extract residuals\nresiduals_zi_pois_adjusted &lt;- resid(zi_pois_adjusted)\nfitted_zi_pois_adjusted &lt;- fitted(zi_pois_adjusted)\n\n# Plot residuals vs fitted values\nplot(fitted_zi_pois_adjusted, residuals_zi_pois_adjusted, xlab = \"Fitted values\", ylab = \"Residuals\",\n     main = \"Residuals vs Fitted\")\nabline(h = 0, col = \"red\")\n\n\n\n\n\n\n\n\n\n# Normal QQ Plot\nqqnorm(residuals_zi_pois_adjusted)\nqqline(residuals_zi_pois_adjusted, col = \"red\")"
  },
  {
    "objectID": "Percent_Damage.html#continuing-analysis-for-other-response-variables",
    "href": "Percent_Damage.html#continuing-analysis-for-other-response-variables",
    "title": "Percent Damage",
    "section": "Continuing analysis for other response variables",
    "text": "Continuing analysis for other response variables\n\nClick here for the analysis on white-tailed deer observations among plots"
  },
  {
    "objectID": "camera.html",
    "href": "camera.html",
    "title": "camera",
    "section": "",
    "text": "Looking at differences in observed white-tailed deer exhibiting feeding behaviors between plots with variable treatments (0:control or 1:tannins) over time. We included WAT (Week after application) as an additional predictor variable and Plot and Field as nested random effects.\nResponse Variable:\n\nGroup Size (daily sums of individuals per plot)\n\nPredictor Variables:\n\nTreatment (0: Control, 1: Tannins)\nWAT (Week After Application: 1-4)\nPlot (1-20)\nField (1-20)\n\nBelow is our process of fitting our data to the best possible model."
  },
  {
    "objectID": "camera.html#reading-in-data",
    "href": "camera.html#reading-in-data",
    "title": "camera",
    "section": "Reading in Data",
    "text": "Reading in Data\n\nseq_data &lt;- read.csv(\"sequences.csv\")"
  },
  {
    "objectID": "camera.html#applying-transformations-and-formatting-data",
    "href": "camera.html#applying-transformations-and-formatting-data",
    "title": "camera",
    "section": "Applying transformations and formatting data",
    "text": "Applying transformations and formatting data\n\n# Transform start_time to year-month-day\nseq_data &lt;- seq_data |&gt;\n  mutate(start_time = as.Date(start_time))\n\n# subsetting to only show only post treatment dates &gt;= 2024-06-21\nseq_data &lt;- seq_data |&gt;\n  filter(identified_by == 'Ethan Marburger',\n         start_time &gt;= \"2024-06-22\" & start_time &lt;= \"2024-08-02\",\n         common_name == \"White-tailed Deer\")\n\nseq_data &lt;- seq_data |&gt;\n  mutate(treatment = case_when(\n    grepl(\"^WTD_2|^WTD_4|^WTD_5|^WTD_7|^WTD_8|^WTD_10|^WTD_14|^WTD_15|^WTD_17|^WTD_18\", deployment_id) ~ 1,\n    grepl(\"^WTD_1|^WTD_3|^WTD_6|^WTD_9|^WTD_11|^WTD_12|^WTD_13|^WTD_16|^WTD_19|^WTD_20\", deployment_id) ~ 0,\n    TRUE ~ NA_real_)) |&gt;\n  mutate(WAT = case_when(\n    start_time &gt;= \"2024-06-22\" & start_time &lt;= \"2024-06-28\" ~ 1,\n    start_time &gt;= \"2024-06-29\" & start_time &lt;= \"2024-07-05\" ~ 2,\n    start_time &gt;= \"2024-07-06\" & start_time &lt;= \"2024-07-12\" ~ 3,\n    start_time &gt;= \"2024-07-13\" & start_time &lt;= \"2024-07-19\" ~ 4,\n    start_time &gt;= \"2024-07-20\" & start_time &lt;= \"2024-07-26\" ~ 5,\n    start_time &gt;= \"2024-07-27\" & start_time &lt;= \"2024-08-02\" ~ 6,\n    TRUE ~ NA_real_)) |&gt;\n  mutate(field = case_when(\n    grepl(\"^WTD_1|^WTD_2|^WTD_3|^WTD_4|^WTD_5|^WTD_6\", deployment_id) ~ 1,\n    grepl(\"^WTD_7|^WTD_8|^WTD_9|^WTD_20\", deployment_id) ~ 2,\n    grepl(\"^WTD_10|^WTD_11|^WTD_12|^WTD_13|^WTD_14|^WTD_15|^WTD_16|^WTD_17|^WTD_18|^WTD_19\", deployment_id) ~ 3,\n    TRUE ~ NA_real_)) |&gt;\n  mutate(plot = case_when(\n    grepl(\"^WTD_1_\", deployment_id) ~ 1,\n    grepl(\"^WTD_2_\", deployment_id) ~ 2,\n    grepl(\"^WTD_3_\", deployment_id) ~ 3,\n    grepl(\"^WTD_4_\", deployment_id) ~ 4,\n    grepl(\"^WTD_5_\", deployment_id) ~ 5,\n    grepl(\"^WTD_6_\", deployment_id) ~ 6,\n    grepl(\"^WTD_7_\", deployment_id) ~ 7,\n    grepl(\"^WTD_8_\", deployment_id) ~ 8,\n    grepl(\"^WTD_9_\", deployment_id) ~ 9,\n    grepl(\"^WTD_10_\", deployment_id) ~ 10,\n    grepl(\"^WTD_11_\", deployment_id) ~ 11,\n    grepl(\"^WTD_12_\", deployment_id) ~ 12,\n    grepl(\"^WTD_13_\", deployment_id) ~ 13,\n    grepl(\"^WTD_14_\", deployment_id) ~ 14,\n    grepl(\"^WTD_15_\", deployment_id) ~ 15,\n    grepl(\"^WTD_16_\", deployment_id) ~ 16,\n    grepl(\"^WTD_17_\", deployment_id) ~ 17,\n    grepl(\"^WTD_18_\", deployment_id) ~ 18,\n    grepl(\"^WTD_19_\", deployment_id) ~ 19,\n    grepl(\"^WTD_20_\", deployment_id) ~ 20,\n    TRUE ~ NA_real_))\n\n# Creating a new tibble\ndata &lt;- seq_data |&gt;\n  select(deployment_id, treatment, Date = start_time, WAT, field, plot, group_size) |&gt;\n  group_by(WAT)\nhead(data)\n\n# A tibble: 6 × 7\n# Groups:   WAT [1]\n  deployment_id       treatment Date         WAT field  plot group_size\n  &lt;chr&gt;                   &lt;dbl&gt; &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;int&gt;\n1 WTD_1_061324_062424         0 2024-06-22     1     1     1          2\n2 WTD_1_061324_062424         0 2024-06-22     1     1     1          2\n3 WTD_2_061324_062424         1 2024-06-22     1     1     2          1\n4 WTD_2_061324_062424         1 2024-06-22     1     1     2          1\n5 WTD_4_061324_062424         1 2024-06-23     1     1     4          1\n6 WTD_6_061324_062424         0 2024-06-22     1     1     6          1"
  },
  {
    "objectID": "camera.html#daily-sums-of-group_size-values.",
    "href": "camera.html#daily-sums-of-group_size-values.",
    "title": "camera",
    "section": "Daily sums of group_size values.",
    "text": "Daily sums of group_size values.\n\n# getting to daily sums of individuals per plot\ndata_daily &lt;- aggregate(group_size ~ Date + plot, data = data, sum, na.rm = TRUE)\n\n# Creating treatment variable\ndata_daily$treatment &lt;- ifelse(data_daily$plot %in% c(1, 3, 6, 9, 11, 12, 13, 16, 19, 20), 0,\n                         ifelse(data_daily$plot %in% c(2, 4, 5, 7, 8, 10, 14, 15, 17, 18), 1,\n                                NA))\n\n# Creating a Field variable\ndata_daily$field &lt;- ifelse(data_daily$plot %in% c(1, 2, 3, 4, 5, 6), 1,\n                         ifelse(data_daily$plot %in% c(7, 8, 9, 20), 2,\n                                3))\n\n# Creating a WAT variable\ndata_daily &lt;- data_daily |&gt;\n  mutate(WAT = case_when(\n  Date &gt;= \"2024-06-22\" & Date &lt;= \"2024-06-28\" ~ 1,\n  Date &gt;= \"2024-06-29\" & Date &lt;= \"2024-07-05\" ~ 2,\n  Date &gt;= \"2024-07-06\" & Date &lt;= \"2024-07-12\" ~ 3,\n  Date &gt;= \"2024-07-13\" & Date &lt;= \"2024-07-19\" ~ 4,\n  Date &gt;= \"2024-07-20\" & Date &lt;= \"2024-07-26\" ~ 5,\n  Date &gt;= \"2024-07-27\" & Date &lt;= \"2024-08-02\" ~ 6,\n  TRUE ~ NA_real_))\n\nhead(data_daily)\n\n        Date plot group_size treatment field WAT\n1 2024-06-22    1          4         0     1   1\n2 2024-06-26    1          3         0     1   1\n3 2024-06-27    1          1         0     1   1\n4 2024-06-28    1          6         0     1   1\n5 2024-06-29    1          3         0     1   2\n6 2024-06-30    1          6         0     1   2"
  },
  {
    "objectID": "camera.html#simple-analysis",
    "href": "camera.html#simple-analysis",
    "title": "camera",
    "section": "Simple Analysis",
    "text": "Simple Analysis\n\n#Converting Field, Plot, and Treatment variables to factors\ndata_daily &lt;- data_daily |&gt;\n  mutate(Field = as.factor(field),\n         Plot = as.factor(plot),\n         Treatment = as.factor(treatment)) |&gt;\n  select(-field, -plot, -treatment) # Dropping unneeded variables\n\n\nSimple Linear Regression\n\n# Linear Regression\n\n# Null Model\nlm_count_1 &lt;- lm(formula = group_size ~ Treatment, data = data_daily)\n\n# Partial Model\nlm_count_2 &lt;- lm(formula = group_size ~ Treatment * WAT, data = data_daily)\n\n# Full Model\nlm_count_3 &lt;- lm(formula = group_size ~ Treatment * WAT * Field, data = data_daily)\n\n\n\nChoosing the best model\n\n#ANOVA for differences in models \nanova(lm_count_1, lm_count_2, lm_count_3)\n\nAnalysis of Variance Table\n\nModel 1: group_size ~ Treatment\nModel 2: group_size ~ Treatment * WAT\nModel 3: group_size ~ Treatment * WAT * Field\n  Res.Df    RSS Df Sum of Sq      F    Pr(&gt;F)    \n1    355 4690.0                                  \n2    353 4573.0  2    116.97 4.9106  0.007891 ** \n3    345 4108.8  8    464.21 4.8722 1.037e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# AIC to pick the best model\nAIC(lm_count_1, lm_count_2, lm_count_3)\n\n           df      AIC\nlm_count_1  3 1938.558\nlm_count_2  5 1933.542\nlm_count_3 13 1911.328\n\n\n\n\nModel Summary\n\nsummary(lm_count_3)\n\n\nCall:\nlm(formula = group_size ~ Treatment * WAT * Field, data = data_daily)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.5814 -2.0956 -0.6827  1.5383 18.6473 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)             3.4678     0.9642   3.596  0.00037 ***\nTreatment1             -0.6337     1.4373  -0.441  0.65955    \nWAT                    -0.2901     0.3132  -0.926  0.35490    \nField2                 -0.1082     1.4647  -0.074  0.94118    \nField3                  0.8069     1.3589   0.594  0.55304    \nTreatment1:WAT          0.1388     0.4516   0.307  0.75880    \nTreatment1:Field2       1.3455     2.0431   0.659  0.51060    \nTreatment1:Field3      -0.5169     1.9354  -0.267  0.78959    \nWAT:Field2              0.4513     0.4237   1.065  0.28750    \nWAT:Field3              0.3524     0.3878   0.909  0.36414    \nTreatment1:WAT:Field2  -0.1510     0.5929  -0.255  0.79909    \nTreatment1:WAT:Field3   0.5418     0.5540   0.978  0.32877    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.451 on 345 degrees of freedom\nMultiple R-squared:  0.1312,    Adjusted R-squared:  0.1035 \nF-statistic: 4.736 on 11 and 345 DF,  p-value: 8.935e-07\n\n\nNo statistical significance but a negative influence of Treatment on group size.\n\n\nChecking Model Assumptions\nUsing a QQ plot to look for non-normal distributions of the model’s plotted residuals\n\nplot(lm_count_3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObserved outliers: 190, 207, 212. May remove outliers later.\nQ-Q Plot isn’t the worst.\nA mixed effects model that allows us to treat Field and Plot as random variables may better match the study design."
  },
  {
    "objectID": "camera.html#mixed-effects-models",
    "href": "camera.html#mixed-effects-models",
    "title": "camera",
    "section": "Mixed Effects Models",
    "text": "Mixed Effects Models\n\nFitting models\n\n# Mixed-Effects Model for Percent Damage\n\n# Null Model\nmem_1 &lt;- glmmTMB(group_size ~ Treatment, data = data_daily)\n\n# Partial Model 1\nmem_2 &lt;- glmmTMB(group_size ~ Treatment * WAT, data = data_daily)\n\n# Partial Model 2\nmem_3 &lt;- glmmTMB(group_size ~ Treatment * WAT * Field, data = data_daily)\n\n# Full Model with random effects for Field\nmem_4 &lt;- glmmTMB(group_size ~ Treatment * WAT + (1 | Field), data = data_daily)\n\n# Full Model with random effects for Field/Plot\nmem_5 &lt;- glmmTMB(group_size ~ Treatment * WAT + (1 | Plot) + (1 | Field), data = data_daily)\n\n\n\nChoosing the best model\n\n#ANOVA for differences in models \nanova(mem_1, mem_2, mem_3,mem_4, mem_5)\n\nData: data_daily\nModels:\nmem_1: group_size ~ Treatment, zi=~0, disp=~1\nmem_2: group_size ~ Treatment * WAT, zi=~0, disp=~1\nmem_4: group_size ~ Treatment * WAT + (1 | Field), zi=~0, disp=~1\nmem_5: group_size ~ Treatment * WAT + (1 | Plot) + (1 | Field), zi=~0, disp=~1\nmem_3: group_size ~ Treatment * WAT * Field, zi=~0, disp=~1\n      Df    AIC    BIC  logLik deviance   Chisq Chi Df Pr(&gt;Chisq)    \nmem_1  3 1938.6 1950.2 -966.28   1932.6                              \nmem_2  5 1933.5 1952.9 -961.77   1923.5  9.0164      2   0.011018 *  \nmem_4  6 1916.8 1940.1 -952.41   1904.8 18.7199      1  1.514e-05 ***\nmem_5  7 1908.5 1935.6 -947.25   1894.5 10.3235      1   0.001313 ** \nmem_3 13 1911.3 1961.7 -942.66   1885.3  9.1698      6   0.164253    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# AIC to pick the best model\nAIC(mem_1, mem_2, mem_3,mem_4, mem_5)\n\n      df      AIC\nmem_1  3 1938.558\nmem_2  5 1933.542\nmem_3 13 1911.328\nmem_4  6 1916.822\nmem_5  7 1908.498\n\n\n\n\nModel Summary\n\nsummary(mem_5)\n\n Family: gaussian  ( identity )\nFormula:          group_size ~ Treatment * WAT + (1 | Plot) + (1 | Field)\nData: data_daily\n\n     AIC      BIC   logLik deviance df.resid \n  1908.5   1935.6   -947.2   1894.5      350 \n\nRandom effects:\n\nConditional model:\n Groups   Name        Variance Std.Dev.\n Plot     (Intercept)  0.7757  0.8807  \n Field    (Intercept)  0.6063  0.7787  \n Residual             11.1900  3.3451  \nNumber of obs: 357, groups:  Plot, 20; Field, 3\n\nDispersion estimate for gaussian family (sigma^2): 11.2 \n\nConditional model:\n               Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)     3.64472    0.77970   4.674 2.95e-06 ***\nTreatment1     -0.74136    0.88387  -0.839   0.4016    \nWAT             0.01287    0.15048   0.086   0.9319    \nTreatment1:WAT  0.34842    0.20949   1.663   0.0963 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nModel Diagnostics\n\n# Extract residuals\nresiduals_1 &lt;- resid(mem_5)\nfitted_1 &lt;- fitted(mem_5)\n\n# Plot residuals vs fitted values\nplot(fitted_1, residuals_1, xlab = \"Fitted values\", ylab = \"Residuals\",\n     main = \"Residuals vs Fitted\")\nabline(h = 0, col = \"red\")\n\n\n\n\n\n\n\n\n\nqqnorm(residuals_1)\nqqline(residuals_1, col = \"red\")\n\n\n\n\n\n\n\n\n\n\nRemoving outliers and refitting best model\n\ndata_outlier &lt;- data_daily[-c(190, 207, 212), ]\n\n\n# Model using data set without outliers\nmem_6 &lt;- glmmTMB(group_size ~ Treatment * WAT + (1 | Plot) + (1 | Field), data = data_outlier)\n\n\n\nModel Summary\n\nsummary(mem_6)\n\n Family: gaussian  ( identity )\nFormula:          group_size ~ Treatment * WAT + (1 | Plot) + (1 | Field)\nData: data_outlier\n\n     AIC      BIC   logLik deviance df.resid \n  1813.6   1840.7   -899.8   1799.6      347 \n\nRandom effects:\n\nConditional model:\n Groups   Name        Variance Std.Dev.\n Plot     (Intercept) 0.2724   0.5219  \n Field    (Intercept) 0.6355   0.7972  \n Residual             9.0911   3.0151  \nNumber of obs: 354, groups:  Plot, 20; Field, 3\n\nDispersion estimate for gaussian family (sigma^2): 9.09 \n\nConditional model:\n               Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)     3.67616    0.70658   5.203 1.96e-07 ***\nTreatment1     -0.53228    0.74245  -0.717    0.473    \nWAT             0.01024    0.13479   0.076    0.939    \nTreatment1:WAT  0.23530    0.18816   1.250    0.211    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nIncreased model significance for all predictor variables!\n\n\nDifference in AIC between last two models\n\nAIC(mem_5, mem_6)\n\nWarning in AIC.default(mem_5, mem_6): models are not all fitted to the same\nnumber of observations\n\n\n      df      AIC\nmem_5  7 1908.498\nmem_6  7 1813.608\n\n\nAIC score for model without outliers is roughly 95 points lower.\n\n\nModel Diagnostics\n\n# Extract residuals\nresiduals_6 &lt;- resid(mem_6)\nfitted_6 &lt;- fitted(mem_6)\n\n# Plot residuals vs fitted values\nplot(fitted_6, residuals_6, xlab = \"Fitted values\", ylab = \"Residuals\",\n     main = \"Residuals vs Fitted\")\nabline(h = 0, col = \"red\")\n\n\n\n\n\n\n\n\n\nqqnorm(residuals_6)\nqqline(residuals_6, col = \"red\")\n\n\n\n\n\n\n\n\nBased on the plotted residuals a model incorporating a log transformation of the response variable may better fit the data.\n\n\nLog transformation model\n\n# Log transformation on data set without outliers\nmem_log &lt;- glmmTMB(log(group_size) ~ Treatment * WAT + (1 | Plot) + (1 | Field), data = data_outlier)\n\n\n\nModel Summary\n\nsummary(mem_log)\n\n Family: gaussian  ( identity )\nFormula:          log(group_size) ~ Treatment * WAT + (1 | Plot) + (1 | Field)\nData: data_outlier\n\n     AIC      BIC   logLik deviance df.resid \n   824.1    851.2   -405.1    810.1      347 \n\nRandom effects:\n\nConditional model:\n Groups   Name        Variance Std.Dev.\n Plot     (Intercept) 0.00482  0.06943 \n Field    (Intercept) 0.04925  0.22193 \n Residual             0.56186  0.74957 \nNumber of obs: 354, groups:  Plot, 20; Field, 3\n\nDispersion estimate for gaussian family (sigma^2): 0.562 \n\nConditional model:\n               Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)     1.09771    0.18071   6.074 1.24e-09 ***\nTreatment1     -0.26853    0.17581  -1.527   0.1267    \nWAT            -0.01352    0.03330  -0.406   0.6847    \nTreatment1:WAT  0.08222    0.04651   1.768   0.0771 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNo model significance for alpha (0.05), but Treatment does have a negative influence on group_size\nI wonder if an ANOVA would be a more appropriate model?\n\n\nDifference in AIC between last two models\n\nAIC(mem_6, mem_log)\n\n        df       AIC\nmem_6    7 1813.6076\nmem_log  7  824.1007\n\n\nAIC score for log transformed model is 824. That’s roughly 991 points less then mem_6\n\n\nModel Diagnostics\n\n# Extract residuals\nresiduals_log &lt;- resid(mem_log)\nfitted_log &lt;- fitted(mem_log)\n\n# Plot residuals vs fitted values\nplot(fitted_log, residuals_log, xlab = \"Fitted values\", ylab = \"Residuals\",\n     main = \"Residuals vs Fitted\")\nabline(h = 0, col = \"red\")\n\n\n\n\n\n\n\n\n\nqqnorm(residuals_log)\nqqline(residuals_log, col = \"red\")\n\n\n\n\n\n\n\n\nBased on the distribution on the fitted residuals and theoretical quarantines, I’m unsure if a log transformed dataset is best. But this model does result in the lowest AIC score."
  },
  {
    "objectID": "camera.html#visualizing-subset-data-with-outliers-removed",
    "href": "camera.html#visualizing-subset-data-with-outliers-removed",
    "title": "camera",
    "section": "Visualizing subset data with outliers removed",
    "text": "Visualizing subset data with outliers removed\n\nggplot(data_outlier, aes(x = factor(Treatment, levels = c(0, 1), labels = c(\"0%\", \"10%\")), \n                        y = group_size, fill = factor(Treatment, levels = c(0, 1), labels = c(\"0%\", \"10%\")))) +\n  geom_boxplot() +\n  facet_wrap(~ WAT, nrow = 1) +  # Facet in a single row\n  labs(\n    x = \"Tannin Concentration\",\n    y = \"Observed White-tailed Deer\",\n    fill = \"Tannin Concentration\"  # Update legend title\n  ) +\n  # Create a dummy aesthetic for WAT to generate a second legend\n  geom_point(aes(color = factor(WAT)), alpha = 0) +  # Invisible points to create the WAT legend\n  scale_color_discrete(name = \"Weeks After Tannin Application\") +  # Legend for WAT\n  theme(\n    legend.position = \"top\",  # Place legend on top\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),  # Center the title horizontally\n    plot.title.position = \"plot\",  # Align title to the entire plot area\n    plot.margin = margin(t = 20, b = 10, l = 10, r = 10),\n    axis.text.x = element_text(size = 12)  # Adjust x-axis text size if necessary# Adjust margins for proper spacing\n)"
  },
  {
    "objectID": "camera.html#continuing-analysis-for-other-response-variables",
    "href": "camera.html#continuing-analysis-for-other-response-variables",
    "title": "camera",
    "section": "Continuing analysis for other response variables",
    "text": "Continuing analysis for other response variables\n\nClick here for the analysis on yield estimates"
  }
]