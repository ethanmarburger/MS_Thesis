---
title: "Height Data Analysis"
format: html
editor: visual
---

# Initial Height Analysis

## Loading and Subsetting Data

```{r}
#| echo: true
#| include: false
library(tidyverse)
library(lme4)
library(lmerTest)
library(glmmTMB)
library(ggplot2)
library(lattice)
library(nlme)
```

### Reading in Data Source

```{r}
# Read the data
data <- read.csv("Data.csv", header=TRUE)
```

**Subsetting data to:**

**1) Only include values from unenclosed plants.**

**2) Convert predictor variables to factors with "levels".**

**3) Remove rows with missing values (missing values = dead plant or sampling error).**

```{r}
# Subset to remove Enclosure values
data <- data[data$Enclosure == "0", ]

# Convert categorical variables to factors
data$Field <- as.factor(data$Field)
data$Plot <- as.factor(data$Plot)
data$Treatment <- as.factor(data$Treatment)
data$Enclosure <- as.factor(data$Enclosure)

# Remove rows with missing Height values
data <- data |>
  filter(!is.na(Height))
```

## Exploratory Data Analysis

**Calculating and Displaying mean soybean height for treatments across Weeks after application.**

```{r}
# Calculate mean Height for each Treatment and WAT combination
summary_data <- data |>
  group_by(Treatment, WAT) |>
  summarise(mean_height = mean(Height, na.rm = TRUE))

# Displaying mean soybean height for treatments across Weeks after application
print(summary_data)
```

## **Plotting "Mean Height by Treatment Over Time"**

```{r}
#| echo: false
# Create a plot
ggplot(summary_data, aes(x = WAT, y = mean_height, color = Treatment, group = Treatment)) +
  geom_line() +
  geom_point() +
  labs(title = "Mean Height by Treatment over Time",
       x = "Weeks After Treatment",
       y = "Mean Height") +
  theme_minimal()
```

## **Box plot's showing the distribution of height over time.**

```{r}
#| echo: false
# Box plot with centered, larger title and two legends: one for Treatment and one for WAT
ggplot(data, aes(x = Treatment, y = Height, fill = Treatment)) +
  geom_boxplot() +
  facet_wrap(~ WAT, nrow = 1) +  # Facet in a single row
  labs(title = "Height Distribution by Treatment over Time",
       x = "Treatment",
       y = "Height") +
  # Create a dummy aesthetic for WAT to generate a second legend
  geom_point(aes(color = factor(WAT)), alpha = 0) +  # Invisible points to create the WAT legend
  scale_color_discrete(name = "Weeks After Treatment") +  # Legend for WAT
  theme(
    legend.position = "right",
    plot.title = element_text(hjust = 0.5, size = 14)  # Center title and increase font size by 2 points (default is ~12)
  )
```

## Simple Analysis

**Fitting models for simple linear Regression**

```{r}
# Linear Regression for Height

# Null Model
lm_height_1 <- lm(formula = Height ~ Treatment, data = data)

# Partial Model
lm_height_2 <- lm(formula = Height ~ Treatment * WAT, data = data)

# Full Model
lm_height_3 <- lm(formula = Height ~ Treatment * WAT * Field, data = data)
```

**Choosing the best model**

```{r}
#ANOVA for differences in models 
anova(lm_height_1, lm_height_2, lm_height_3)

# AIC to pick the best model
AIC(lm_height_1, lm_height_2, lm_height_3)
```

**Model lm_height_3 has the lowest AIC score.**

```{r}
summary(lm_height_3)
```

**The Interaction between Treatment1 (Tannin application) and WAT (Week after Treatment) is significant at alpha = 0.05**

## Checking Model Assumptions

Using a QQ plot to look for non-normal distributions of the model's plotted residuals

```{r}
plot(lm_height_3)
```

**Looking at the plotted Q-Q Residuals, data does appear to be slightly non-normal. With the size of out data set, non-normality is probably fine**

**Also, I don't believe that simple linear regression is appropriate model for out data. Because of the three fields design plan, we should switch the variable Field to a random factor to block the data.**

**A better fitting model will provide more accurate results.**

# Continued Analysis with Model Adjustments

## Mixed Effects Model

```{r}
# Partial model without nested random effect
lmer_1 <- lmer(Height ~ Treatment + (1|Field), data = data)

# Full model without nested  random effect
lmer_2 <- lmer(Height ~ Treatment * WAT + (1|Field), data = data)

# Partial model with nested random effects
lmer_3 <- lmer(Height ~ Treatment + (1|Field/Plot), data = data)

# Full model with nested random effects
lmer_4 <- lmer(Height ~ Treatment * WAT + (1|Field/Plot), data = data)

# Null model (only random effects)
lmer_null <- lmer(Height ~ 1 + (1|Field/Plot), data = data)
```

## Model Comparison using ANOVA

```{r}
# Compare models using likelihood ratio test
anova(lmer_1, lmer_2, lmer_3, lmer_4, lmer_null)
```

## Model comparison using AIC

```{r}
# AIC comparison
AIC(lmer_1, lmer_2, lmer_3, lmer_4, lmer_null)
```

## Model comparison using BIC

```{r}
# BIC comparison
BIC(lmer_1, lmer_2, lmer_3, lmer_4, lmer_null)
```

## Summary of best fitted model!

```{r}
# Full model with nested random effects
summary(lmer_4)
```
**Best Fitted Model is the full model with nested random effects**

## Model Diagnostics

### Extracting model residuals

```{r}
# Extract residuals
residuals <- resid(lmer_4)
fitted <- fitted(lmer_4)

# Plot residuals vs fitted values
plot(fitted, residuals, xlab = "Fitted values", ylab = "Residuals",
     main = "Residuals vs Fitted")
abline(h = 0, col = "red")
```

**Plotted Model Residuals vs Fitted Residuals deviation from a straight line indicates departure from normality assumption.**

**This invalidates our model results.**

### Normality in Residuals

```{r}
qqnorm(residuals)
qqline(residuals, col = "red")
```

**Deviation of Quantiles from a straight line at the ends indicate outliers.**

**A log transformation may better fit the data to out model and allow our data to meet our models normality assumption.**

# Response Log Transformation and Further Analysis

## Mixed Effects Model with Log transformation

```{r}
# Fit the mixed-effects model with log transformation on best model
lmer_log <- lmer(log(Height) ~ Treatment * WAT + (1|Field/Plot), data = data)
```

## AIC comparison between log and non-log model

```{r}
AIC(lmer_4, lmer_log)
```

## BIC comparison

```{r}
BIC(lmer_4, lmer_log)
```

**Log transformed model has drastically lower AIC and BIC.**

## Summary of Best fitting model 

```{r}
summary(lmer_log)
```

**No model significance between treatment with tannin and height variable, but a positive influence.**

**No model significance between tannin treatment and Week After Application, but a positive influence.**

**Statistical Significance for Week After Treatment.**

## Log Transformed Model Diagnostics

### Extracting model residuals

```{r}
residuals_log <- resid(lmer_log)
fitted_log <- fitted(lmer_log)

# Plot residuals vs fitted values
plot(fitted_log, residuals_log, xlab = "Fitted values", ylab = "Residuals",
     main = "Residuals vs Fitted")
abline(h = 0, col = "red")
```

**Log Transformation fixed normality assumption.**

### Normality in Residuals

```{r}
qqnorm(residuals_log)
qqline(residuals_log, col = "red")
```

**Quantiles seem to be better fit with log transformed model.**

**Log transformed mixed effects model seems to be the best fit model for analyzing the Height variable.**